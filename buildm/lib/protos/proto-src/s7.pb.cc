// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: s7.proto

#include "s7.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_s7_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ConfigSnapSeven_PLCConfig_s7_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_s7_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ConfigSnapSeven_PLCConfig_DataBlockTag_s7_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_s7_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ConfigSnapSeven_PLCConfig_IoTag_s7_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_s7_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ConfigSnapSeven_PLCConfig_MemoryTag_s7_2eproto;
class SnapSevenConfigResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SnapSevenConfigResponse> _instance;
} _SnapSevenConfigResponse_default_instance_;
class ConfigSnapSeven_PLCConfig_IoTagDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConfigSnapSeven_PLCConfig_IoTag> _instance;
} _ConfigSnapSeven_PLCConfig_IoTag_default_instance_;
class ConfigSnapSeven_PLCConfig_DataBlockTagDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConfigSnapSeven_PLCConfig_DataBlockTag> _instance;
} _ConfigSnapSeven_PLCConfig_DataBlockTag_default_instance_;
class ConfigSnapSeven_PLCConfig_MemoryTagDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConfigSnapSeven_PLCConfig_MemoryTag> _instance;
} _ConfigSnapSeven_PLCConfig_MemoryTag_default_instance_;
class ConfigSnapSeven_PLCConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConfigSnapSeven_PLCConfig> _instance;
} _ConfigSnapSeven_PLCConfig_default_instance_;
class ConfigSnapSevenDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConfigSnapSeven> _instance;
} _ConfigSnapSeven_default_instance_;
static void InitDefaultsscc_info_ConfigSnapSeven_s7_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ConfigSnapSeven_default_instance_;
    new (ptr) ::ConfigSnapSeven();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ConfigSnapSeven::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ConfigSnapSeven_s7_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ConfigSnapSeven_s7_2eproto}, {
      &scc_info_ConfigSnapSeven_PLCConfig_s7_2eproto.base,}};

static void InitDefaultsscc_info_ConfigSnapSeven_PLCConfig_s7_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ConfigSnapSeven_PLCConfig_default_instance_;
    new (ptr) ::ConfigSnapSeven_PLCConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ConfigSnapSeven_PLCConfig::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ConfigSnapSeven_PLCConfig_s7_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_ConfigSnapSeven_PLCConfig_s7_2eproto}, {
      &scc_info_ConfigSnapSeven_PLCConfig_IoTag_s7_2eproto.base,
      &scc_info_ConfigSnapSeven_PLCConfig_DataBlockTag_s7_2eproto.base,
      &scc_info_ConfigSnapSeven_PLCConfig_MemoryTag_s7_2eproto.base,}};

static void InitDefaultsscc_info_ConfigSnapSeven_PLCConfig_DataBlockTag_s7_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ConfigSnapSeven_PLCConfig_DataBlockTag_default_instance_;
    new (ptr) ::ConfigSnapSeven_PLCConfig_DataBlockTag();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ConfigSnapSeven_PLCConfig_DataBlockTag::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ConfigSnapSeven_PLCConfig_DataBlockTag_s7_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ConfigSnapSeven_PLCConfig_DataBlockTag_s7_2eproto}, {}};

static void InitDefaultsscc_info_ConfigSnapSeven_PLCConfig_IoTag_s7_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ConfigSnapSeven_PLCConfig_IoTag_default_instance_;
    new (ptr) ::ConfigSnapSeven_PLCConfig_IoTag();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ConfigSnapSeven_PLCConfig_IoTag::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ConfigSnapSeven_PLCConfig_IoTag_s7_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ConfigSnapSeven_PLCConfig_IoTag_s7_2eproto}, {}};

static void InitDefaultsscc_info_ConfigSnapSeven_PLCConfig_MemoryTag_s7_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ConfigSnapSeven_PLCConfig_MemoryTag_default_instance_;
    new (ptr) ::ConfigSnapSeven_PLCConfig_MemoryTag();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ConfigSnapSeven_PLCConfig_MemoryTag::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ConfigSnapSeven_PLCConfig_MemoryTag_s7_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ConfigSnapSeven_PLCConfig_MemoryTag_s7_2eproto}, {}};

static void InitDefaultsscc_info_SnapSevenConfigResponse_s7_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SnapSevenConfigResponse_default_instance_;
    new (ptr) ::SnapSevenConfigResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SnapSevenConfigResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SnapSevenConfigResponse_s7_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SnapSevenConfigResponse_s7_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_s7_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_s7_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_s7_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_s7_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SnapSevenConfigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SnapSevenConfigResponse, success_),
  PROTOBUF_FIELD_OFFSET(::SnapSevenConfigResponse, errorcode_),
  PROTOBUF_FIELD_OFFSET(::SnapSevenConfigResponse, errordesc_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_IoTag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_IoTag, tagname_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_IoTag, tagid_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_IoTag, tagtype_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_IoTag, iotype_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_IoTag, wordcount_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_IoTag, bitcount_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_IoTag, bytecount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_DataBlockTag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_DataBlockTag, tagname_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_DataBlockTag, tagid_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_DataBlockTag, functioncode_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_DataBlockTag, dbnumber_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_DataBlockTag, startaddress_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_DataBlockTag, varsize_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_MemoryTag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_MemoryTag, tagname_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_MemoryTag, tagid_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_MemoryTag, functioncode_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_MemoryTag, startaddress_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_MemoryTag, varsize_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig, plcname_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig, plcid_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig, plcaddress_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig, plcport_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig, plcip_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig, iotag_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig, datablocktag_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig, memorytag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven, plcconfig_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::SnapSevenConfigResponse)},
  { 8, -1, sizeof(::ConfigSnapSeven_PLCConfig_IoTag)},
  { 20, -1, sizeof(::ConfigSnapSeven_PLCConfig_DataBlockTag)},
  { 31, -1, sizeof(::ConfigSnapSeven_PLCConfig_MemoryTag)},
  { 41, -1, sizeof(::ConfigSnapSeven_PLCConfig)},
  { 54, -1, sizeof(::ConfigSnapSeven)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_SnapSevenConfigResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ConfigSnapSeven_PLCConfig_IoTag_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ConfigSnapSeven_PLCConfig_DataBlockTag_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ConfigSnapSeven_PLCConfig_MemoryTag_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ConfigSnapSeven_PLCConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ConfigSnapSeven_default_instance_),
};

const char descriptor_table_protodef_s7_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\010s7.proto\"P\n\027SnapSevenConfigResponse\022\017\n"
  "\007Success\030\001 \001(\010\022\021\n\terrorCode\030\002 \001(\005\022\021\n\terr"
  "orDesc\030\003 \001(\t\"\267\005\n\017ConfigSnapSeven\022-\n\tpLCC"
  "onfig\030\001 \003(\0132\032.ConfigSnapSeven.PLCConfig\032"
  "\364\004\n\tPLCConfig\022\017\n\007plcName\030\001 \001(\t\022\r\n\005plcID\030"
  "\002 \001(\t\022\022\n\nplcAddress\030\003 \001(\t\022\017\n\007plcPort\030\004 \001"
  "(\005\022\r\n\005plcIp\030\005 \001(\t\022/\n\005iotag\030\006 \003(\0132 .Confi"
  "gSnapSeven.PLCConfig.IoTag\022=\n\014datablockt"
  "ag\030\007 \003(\0132\'.ConfigSnapSeven.PLCConfig.Dat"
  "aBlockTag\0227\n\tmemoryTag\030\010 \003(\0132$.ConfigSna"
  "pSeven.PLCConfig.MemoryTag\032\200\001\n\005IoTag\022\017\n\007"
  "tagName\030\001 \001(\t\022\r\n\005tagId\030\002 \001(\t\022\017\n\007tagType\030"
  "\003 \001(\t\022\016\n\006ioType\030\004 \001(\t\022\021\n\twordCount\030\005 \001(\005"
  "\022\020\n\010bitCount\030\006 \001(\005\022\021\n\tbyteCount\030\007 \001(\005\032}\n"
  "\014DataBlockTag\022\017\n\007tagName\030\001 \001(\t\022\r\n\005tagId\030"
  "\002 \001(\t\022\024\n\014functionCode\030\003 \001(\t\022\020\n\010dBNumber\030"
  "\004 \001(\005\022\024\n\014startAddress\030\005 \001(\005\022\017\n\007varSize\030\006"
  " \001(\005\032h\n\tMemoryTag\022\017\n\007tagName\030\001 \001(\t\022\r\n\005ta"
  "gId\030\002 \001(\t\022\024\n\014functionCode\030\003 \001(\t\022\024\n\014start"
  "Address\030\004 \001(\005\022\017\n\007varSize\030\005 \001(\0052`\n\025System"
  "SnapSevenConfig\022G\n\031SendSystemSnapSevenCo"
  "nfig\022\020.ConfigSnapSeven\032\030.SnapSevenConfig"
  "Responseb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_s7_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_s7_2eproto_sccs[6] = {
  &scc_info_ConfigSnapSeven_s7_2eproto.base,
  &scc_info_ConfigSnapSeven_PLCConfig_s7_2eproto.base,
  &scc_info_ConfigSnapSeven_PLCConfig_DataBlockTag_s7_2eproto.base,
  &scc_info_ConfigSnapSeven_PLCConfig_IoTag_s7_2eproto.base,
  &scc_info_ConfigSnapSeven_PLCConfig_MemoryTag_s7_2eproto.base,
  &scc_info_SnapSevenConfigResponse_s7_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_s7_2eproto_once;
static bool descriptor_table_s7_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_s7_2eproto = {
  &descriptor_table_s7_2eproto_initialized, descriptor_table_protodef_s7_2eproto, "s7.proto", 896,
  &descriptor_table_s7_2eproto_once, descriptor_table_s7_2eproto_sccs, descriptor_table_s7_2eproto_deps, 6, 0,
  schemas, file_default_instances, TableStruct_s7_2eproto::offsets,
  file_level_metadata_s7_2eproto, 6, file_level_enum_descriptors_s7_2eproto, file_level_service_descriptors_s7_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_s7_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_s7_2eproto), true);

// ===================================================================

void SnapSevenConfigResponse::InitAsDefaultInstance() {
}
class SnapSevenConfigResponse::_Internal {
 public:
};

SnapSevenConfigResponse::SnapSevenConfigResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SnapSevenConfigResponse)
}
SnapSevenConfigResponse::SnapSevenConfigResponse(const SnapSevenConfigResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errordesc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_errordesc().empty()) {
    errordesc_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.errordesc_);
  }
  ::memcpy(&success_, &from.success_,
    static_cast<size_t>(reinterpret_cast<char*>(&errorcode_) -
    reinterpret_cast<char*>(&success_)) + sizeof(errorcode_));
  // @@protoc_insertion_point(copy_constructor:SnapSevenConfigResponse)
}

void SnapSevenConfigResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SnapSevenConfigResponse_s7_2eproto.base);
  errordesc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errorcode_) -
      reinterpret_cast<char*>(&success_)) + sizeof(errorcode_));
}

SnapSevenConfigResponse::~SnapSevenConfigResponse() {
  // @@protoc_insertion_point(destructor:SnapSevenConfigResponse)
  SharedDtor();
}

void SnapSevenConfigResponse::SharedDtor() {
  errordesc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SnapSevenConfigResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SnapSevenConfigResponse& SnapSevenConfigResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SnapSevenConfigResponse_s7_2eproto.base);
  return *internal_default_instance();
}


void SnapSevenConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:SnapSevenConfigResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errordesc_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errorcode_) -
      reinterpret_cast<char*>(&success_)) + sizeof(errorcode_));
  _internal_metadata_.Clear();
}

const char* SnapSevenConfigResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool Success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 errorCode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          errorcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string errorDesc = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_errordesc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "SnapSevenConfigResponse.errorDesc"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SnapSevenConfigResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SnapSevenConfigResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Success = 1;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // int32 errorCode = 2;
  if (this->errorcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_errorcode(), target);
  }

  // string errorDesc = 3;
  if (this->errordesc().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_errordesc().data(), static_cast<int>(this->_internal_errordesc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SnapSevenConfigResponse.errorDesc");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_errordesc(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SnapSevenConfigResponse)
  return target;
}

size_t SnapSevenConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SnapSevenConfigResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string errorDesc = 3;
  if (this->errordesc().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_errordesc());
  }

  // bool Success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  // int32 errorCode = 2;
  if (this->errorcode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_errorcode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SnapSevenConfigResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SnapSevenConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SnapSevenConfigResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SnapSevenConfigResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SnapSevenConfigResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SnapSevenConfigResponse)
    MergeFrom(*source);
  }
}

void SnapSevenConfigResponse::MergeFrom(const SnapSevenConfigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SnapSevenConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errordesc().size() > 0) {

    errordesc_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.errordesc_);
  }
  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
  if (from.errorcode() != 0) {
    _internal_set_errorcode(from._internal_errorcode());
  }
}

void SnapSevenConfigResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SnapSevenConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SnapSevenConfigResponse::CopyFrom(const SnapSevenConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SnapSevenConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SnapSevenConfigResponse::IsInitialized() const {
  return true;
}

void SnapSevenConfigResponse::InternalSwap(SnapSevenConfigResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  errordesc_.Swap(&other->errordesc_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  swap(errorcode_, other->errorcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SnapSevenConfigResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ConfigSnapSeven_PLCConfig_IoTag::InitAsDefaultInstance() {
}
class ConfigSnapSeven_PLCConfig_IoTag::_Internal {
 public:
};

ConfigSnapSeven_PLCConfig_IoTag::ConfigSnapSeven_PLCConfig_IoTag()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigSnapSeven.PLCConfig.IoTag)
}
ConfigSnapSeven_PLCConfig_IoTag::ConfigSnapSeven_PLCConfig_IoTag(const ConfigSnapSeven_PLCConfig_IoTag& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tagname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tagname().empty()) {
    tagname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tagname_);
  }
  tagid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tagid().empty()) {
    tagid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tagid_);
  }
  tagtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tagtype().empty()) {
    tagtype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tagtype_);
  }
  iotype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_iotype().empty()) {
    iotype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.iotype_);
  }
  ::memcpy(&wordcount_, &from.wordcount_,
    static_cast<size_t>(reinterpret_cast<char*>(&bytecount_) -
    reinterpret_cast<char*>(&wordcount_)) + sizeof(bytecount_));
  // @@protoc_insertion_point(copy_constructor:ConfigSnapSeven.PLCConfig.IoTag)
}

void ConfigSnapSeven_PLCConfig_IoTag::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ConfigSnapSeven_PLCConfig_IoTag_s7_2eproto.base);
  tagname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tagid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tagtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  iotype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&wordcount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bytecount_) -
      reinterpret_cast<char*>(&wordcount_)) + sizeof(bytecount_));
}

ConfigSnapSeven_PLCConfig_IoTag::~ConfigSnapSeven_PLCConfig_IoTag() {
  // @@protoc_insertion_point(destructor:ConfigSnapSeven.PLCConfig.IoTag)
  SharedDtor();
}

void ConfigSnapSeven_PLCConfig_IoTag::SharedDtor() {
  tagname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tagid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tagtype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  iotype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ConfigSnapSeven_PLCConfig_IoTag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConfigSnapSeven_PLCConfig_IoTag& ConfigSnapSeven_PLCConfig_IoTag::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ConfigSnapSeven_PLCConfig_IoTag_s7_2eproto.base);
  return *internal_default_instance();
}


void ConfigSnapSeven_PLCConfig_IoTag::Clear() {
// @@protoc_insertion_point(message_clear_start:ConfigSnapSeven.PLCConfig.IoTag)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tagname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tagid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tagtype_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  iotype_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&wordcount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bytecount_) -
      reinterpret_cast<char*>(&wordcount_)) + sizeof(bytecount_));
  _internal_metadata_.Clear();
}

const char* ConfigSnapSeven_PLCConfig_IoTag::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string tagName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_tagname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ConfigSnapSeven.PLCConfig.IoTag.tagName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string tagId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_tagid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ConfigSnapSeven.PLCConfig.IoTag.tagId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string tagType = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_tagtype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ConfigSnapSeven.PLCConfig.IoTag.tagType"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ioType = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_iotype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ConfigSnapSeven.PLCConfig.IoTag.ioType"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 wordCount = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          wordcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 bitCount = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          bitcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 byteCount = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          bytecount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ConfigSnapSeven_PLCConfig_IoTag::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigSnapSeven.PLCConfig.IoTag)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tagName = 1;
  if (this->tagname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tagname().data(), static_cast<int>(this->_internal_tagname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ConfigSnapSeven.PLCConfig.IoTag.tagName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_tagname(), target);
  }

  // string tagId = 2;
  if (this->tagid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tagid().data(), static_cast<int>(this->_internal_tagid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ConfigSnapSeven.PLCConfig.IoTag.tagId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_tagid(), target);
  }

  // string tagType = 3;
  if (this->tagtype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tagtype().data(), static_cast<int>(this->_internal_tagtype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ConfigSnapSeven.PLCConfig.IoTag.tagType");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_tagtype(), target);
  }

  // string ioType = 4;
  if (this->iotype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_iotype().data(), static_cast<int>(this->_internal_iotype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ConfigSnapSeven.PLCConfig.IoTag.ioType");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_iotype(), target);
  }

  // int32 wordCount = 5;
  if (this->wordcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_wordcount(), target);
  }

  // int32 bitCount = 6;
  if (this->bitcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_bitcount(), target);
  }

  // int32 byteCount = 7;
  if (this->bytecount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_bytecount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigSnapSeven.PLCConfig.IoTag)
  return target;
}

size_t ConfigSnapSeven_PLCConfig_IoTag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ConfigSnapSeven.PLCConfig.IoTag)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tagName = 1;
  if (this->tagname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tagname());
  }

  // string tagId = 2;
  if (this->tagid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tagid());
  }

  // string tagType = 3;
  if (this->tagtype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tagtype());
  }

  // string ioType = 4;
  if (this->iotype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_iotype());
  }

  // int32 wordCount = 5;
  if (this->wordcount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_wordcount());
  }

  // int32 bitCount = 6;
  if (this->bitcount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_bitcount());
  }

  // int32 byteCount = 7;
  if (this->bytecount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_bytecount());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigSnapSeven_PLCConfig_IoTag::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ConfigSnapSeven.PLCConfig.IoTag)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigSnapSeven_PLCConfig_IoTag* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ConfigSnapSeven_PLCConfig_IoTag>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ConfigSnapSeven.PLCConfig.IoTag)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ConfigSnapSeven.PLCConfig.IoTag)
    MergeFrom(*source);
  }
}

void ConfigSnapSeven_PLCConfig_IoTag::MergeFrom(const ConfigSnapSeven_PLCConfig_IoTag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ConfigSnapSeven.PLCConfig.IoTag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tagname().size() > 0) {

    tagname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tagname_);
  }
  if (from.tagid().size() > 0) {

    tagid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tagid_);
  }
  if (from.tagtype().size() > 0) {

    tagtype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tagtype_);
  }
  if (from.iotype().size() > 0) {

    iotype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.iotype_);
  }
  if (from.wordcount() != 0) {
    _internal_set_wordcount(from._internal_wordcount());
  }
  if (from.bitcount() != 0) {
    _internal_set_bitcount(from._internal_bitcount());
  }
  if (from.bytecount() != 0) {
    _internal_set_bytecount(from._internal_bytecount());
  }
}

void ConfigSnapSeven_PLCConfig_IoTag::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ConfigSnapSeven.PLCConfig.IoTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigSnapSeven_PLCConfig_IoTag::CopyFrom(const ConfigSnapSeven_PLCConfig_IoTag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ConfigSnapSeven.PLCConfig.IoTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigSnapSeven_PLCConfig_IoTag::IsInitialized() const {
  return true;
}

void ConfigSnapSeven_PLCConfig_IoTag::InternalSwap(ConfigSnapSeven_PLCConfig_IoTag* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  tagname_.Swap(&other->tagname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tagid_.Swap(&other->tagid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tagtype_.Swap(&other->tagtype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  iotype_.Swap(&other->iotype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(wordcount_, other->wordcount_);
  swap(bitcount_, other->bitcount_);
  swap(bytecount_, other->bytecount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigSnapSeven_PLCConfig_IoTag::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ConfigSnapSeven_PLCConfig_DataBlockTag::InitAsDefaultInstance() {
}
class ConfigSnapSeven_PLCConfig_DataBlockTag::_Internal {
 public:
};

ConfigSnapSeven_PLCConfig_DataBlockTag::ConfigSnapSeven_PLCConfig_DataBlockTag()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigSnapSeven.PLCConfig.DataBlockTag)
}
ConfigSnapSeven_PLCConfig_DataBlockTag::ConfigSnapSeven_PLCConfig_DataBlockTag(const ConfigSnapSeven_PLCConfig_DataBlockTag& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tagname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tagname().empty()) {
    tagname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tagname_);
  }
  tagid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tagid().empty()) {
    tagid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tagid_);
  }
  functioncode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_functioncode().empty()) {
    functioncode_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.functioncode_);
  }
  ::memcpy(&dbnumber_, &from.dbnumber_,
    static_cast<size_t>(reinterpret_cast<char*>(&varsize_) -
    reinterpret_cast<char*>(&dbnumber_)) + sizeof(varsize_));
  // @@protoc_insertion_point(copy_constructor:ConfigSnapSeven.PLCConfig.DataBlockTag)
}

void ConfigSnapSeven_PLCConfig_DataBlockTag::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ConfigSnapSeven_PLCConfig_DataBlockTag_s7_2eproto.base);
  tagname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tagid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  functioncode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&dbnumber_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&varsize_) -
      reinterpret_cast<char*>(&dbnumber_)) + sizeof(varsize_));
}

ConfigSnapSeven_PLCConfig_DataBlockTag::~ConfigSnapSeven_PLCConfig_DataBlockTag() {
  // @@protoc_insertion_point(destructor:ConfigSnapSeven.PLCConfig.DataBlockTag)
  SharedDtor();
}

void ConfigSnapSeven_PLCConfig_DataBlockTag::SharedDtor() {
  tagname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tagid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  functioncode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ConfigSnapSeven_PLCConfig_DataBlockTag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConfigSnapSeven_PLCConfig_DataBlockTag& ConfigSnapSeven_PLCConfig_DataBlockTag::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ConfigSnapSeven_PLCConfig_DataBlockTag_s7_2eproto.base);
  return *internal_default_instance();
}


void ConfigSnapSeven_PLCConfig_DataBlockTag::Clear() {
// @@protoc_insertion_point(message_clear_start:ConfigSnapSeven.PLCConfig.DataBlockTag)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tagname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tagid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  functioncode_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&dbnumber_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&varsize_) -
      reinterpret_cast<char*>(&dbnumber_)) + sizeof(varsize_));
  _internal_metadata_.Clear();
}

const char* ConfigSnapSeven_PLCConfig_DataBlockTag::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string tagName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_tagname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ConfigSnapSeven.PLCConfig.DataBlockTag.tagName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string tagId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_tagid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ConfigSnapSeven.PLCConfig.DataBlockTag.tagId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string functionCode = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_functioncode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ConfigSnapSeven.PLCConfig.DataBlockTag.functionCode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 dBNumber = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          dbnumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 startAddress = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          startaddress_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 varSize = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          varsize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ConfigSnapSeven_PLCConfig_DataBlockTag::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigSnapSeven.PLCConfig.DataBlockTag)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tagName = 1;
  if (this->tagname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tagname().data(), static_cast<int>(this->_internal_tagname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ConfigSnapSeven.PLCConfig.DataBlockTag.tagName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_tagname(), target);
  }

  // string tagId = 2;
  if (this->tagid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tagid().data(), static_cast<int>(this->_internal_tagid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ConfigSnapSeven.PLCConfig.DataBlockTag.tagId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_tagid(), target);
  }

  // string functionCode = 3;
  if (this->functioncode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_functioncode().data(), static_cast<int>(this->_internal_functioncode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ConfigSnapSeven.PLCConfig.DataBlockTag.functionCode");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_functioncode(), target);
  }

  // int32 dBNumber = 4;
  if (this->dbnumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_dbnumber(), target);
  }

  // int32 startAddress = 5;
  if (this->startaddress() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_startaddress(), target);
  }

  // int32 varSize = 6;
  if (this->varsize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_varsize(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigSnapSeven.PLCConfig.DataBlockTag)
  return target;
}

size_t ConfigSnapSeven_PLCConfig_DataBlockTag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ConfigSnapSeven.PLCConfig.DataBlockTag)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tagName = 1;
  if (this->tagname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tagname());
  }

  // string tagId = 2;
  if (this->tagid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tagid());
  }

  // string functionCode = 3;
  if (this->functioncode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_functioncode());
  }

  // int32 dBNumber = 4;
  if (this->dbnumber() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_dbnumber());
  }

  // int32 startAddress = 5;
  if (this->startaddress() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_startaddress());
  }

  // int32 varSize = 6;
  if (this->varsize() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_varsize());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigSnapSeven_PLCConfig_DataBlockTag::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ConfigSnapSeven.PLCConfig.DataBlockTag)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigSnapSeven_PLCConfig_DataBlockTag* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ConfigSnapSeven_PLCConfig_DataBlockTag>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ConfigSnapSeven.PLCConfig.DataBlockTag)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ConfigSnapSeven.PLCConfig.DataBlockTag)
    MergeFrom(*source);
  }
}

void ConfigSnapSeven_PLCConfig_DataBlockTag::MergeFrom(const ConfigSnapSeven_PLCConfig_DataBlockTag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ConfigSnapSeven.PLCConfig.DataBlockTag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tagname().size() > 0) {

    tagname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tagname_);
  }
  if (from.tagid().size() > 0) {

    tagid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tagid_);
  }
  if (from.functioncode().size() > 0) {

    functioncode_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.functioncode_);
  }
  if (from.dbnumber() != 0) {
    _internal_set_dbnumber(from._internal_dbnumber());
  }
  if (from.startaddress() != 0) {
    _internal_set_startaddress(from._internal_startaddress());
  }
  if (from.varsize() != 0) {
    _internal_set_varsize(from._internal_varsize());
  }
}

void ConfigSnapSeven_PLCConfig_DataBlockTag::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ConfigSnapSeven.PLCConfig.DataBlockTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigSnapSeven_PLCConfig_DataBlockTag::CopyFrom(const ConfigSnapSeven_PLCConfig_DataBlockTag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ConfigSnapSeven.PLCConfig.DataBlockTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigSnapSeven_PLCConfig_DataBlockTag::IsInitialized() const {
  return true;
}

void ConfigSnapSeven_PLCConfig_DataBlockTag::InternalSwap(ConfigSnapSeven_PLCConfig_DataBlockTag* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  tagname_.Swap(&other->tagname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tagid_.Swap(&other->tagid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  functioncode_.Swap(&other->functioncode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(dbnumber_, other->dbnumber_);
  swap(startaddress_, other->startaddress_);
  swap(varsize_, other->varsize_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigSnapSeven_PLCConfig_DataBlockTag::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ConfigSnapSeven_PLCConfig_MemoryTag::InitAsDefaultInstance() {
}
class ConfigSnapSeven_PLCConfig_MemoryTag::_Internal {
 public:
};

ConfigSnapSeven_PLCConfig_MemoryTag::ConfigSnapSeven_PLCConfig_MemoryTag()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigSnapSeven.PLCConfig.MemoryTag)
}
ConfigSnapSeven_PLCConfig_MemoryTag::ConfigSnapSeven_PLCConfig_MemoryTag(const ConfigSnapSeven_PLCConfig_MemoryTag& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tagname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tagname().empty()) {
    tagname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tagname_);
  }
  tagid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tagid().empty()) {
    tagid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tagid_);
  }
  functioncode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_functioncode().empty()) {
    functioncode_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.functioncode_);
  }
  ::memcpy(&startaddress_, &from.startaddress_,
    static_cast<size_t>(reinterpret_cast<char*>(&varsize_) -
    reinterpret_cast<char*>(&startaddress_)) + sizeof(varsize_));
  // @@protoc_insertion_point(copy_constructor:ConfigSnapSeven.PLCConfig.MemoryTag)
}

void ConfigSnapSeven_PLCConfig_MemoryTag::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ConfigSnapSeven_PLCConfig_MemoryTag_s7_2eproto.base);
  tagname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tagid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  functioncode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&startaddress_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&varsize_) -
      reinterpret_cast<char*>(&startaddress_)) + sizeof(varsize_));
}

ConfigSnapSeven_PLCConfig_MemoryTag::~ConfigSnapSeven_PLCConfig_MemoryTag() {
  // @@protoc_insertion_point(destructor:ConfigSnapSeven.PLCConfig.MemoryTag)
  SharedDtor();
}

void ConfigSnapSeven_PLCConfig_MemoryTag::SharedDtor() {
  tagname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tagid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  functioncode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ConfigSnapSeven_PLCConfig_MemoryTag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConfigSnapSeven_PLCConfig_MemoryTag& ConfigSnapSeven_PLCConfig_MemoryTag::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ConfigSnapSeven_PLCConfig_MemoryTag_s7_2eproto.base);
  return *internal_default_instance();
}


void ConfigSnapSeven_PLCConfig_MemoryTag::Clear() {
// @@protoc_insertion_point(message_clear_start:ConfigSnapSeven.PLCConfig.MemoryTag)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tagname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tagid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  functioncode_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&startaddress_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&varsize_) -
      reinterpret_cast<char*>(&startaddress_)) + sizeof(varsize_));
  _internal_metadata_.Clear();
}

const char* ConfigSnapSeven_PLCConfig_MemoryTag::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string tagName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_tagname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ConfigSnapSeven.PLCConfig.MemoryTag.tagName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string tagId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_tagid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ConfigSnapSeven.PLCConfig.MemoryTag.tagId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string functionCode = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_functioncode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ConfigSnapSeven.PLCConfig.MemoryTag.functionCode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 startAddress = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          startaddress_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 varSize = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          varsize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ConfigSnapSeven_PLCConfig_MemoryTag::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigSnapSeven.PLCConfig.MemoryTag)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tagName = 1;
  if (this->tagname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tagname().data(), static_cast<int>(this->_internal_tagname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ConfigSnapSeven.PLCConfig.MemoryTag.tagName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_tagname(), target);
  }

  // string tagId = 2;
  if (this->tagid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tagid().data(), static_cast<int>(this->_internal_tagid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ConfigSnapSeven.PLCConfig.MemoryTag.tagId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_tagid(), target);
  }

  // string functionCode = 3;
  if (this->functioncode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_functioncode().data(), static_cast<int>(this->_internal_functioncode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ConfigSnapSeven.PLCConfig.MemoryTag.functionCode");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_functioncode(), target);
  }

  // int32 startAddress = 4;
  if (this->startaddress() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_startaddress(), target);
  }

  // int32 varSize = 5;
  if (this->varsize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_varsize(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigSnapSeven.PLCConfig.MemoryTag)
  return target;
}

size_t ConfigSnapSeven_PLCConfig_MemoryTag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ConfigSnapSeven.PLCConfig.MemoryTag)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tagName = 1;
  if (this->tagname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tagname());
  }

  // string tagId = 2;
  if (this->tagid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tagid());
  }

  // string functionCode = 3;
  if (this->functioncode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_functioncode());
  }

  // int32 startAddress = 4;
  if (this->startaddress() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_startaddress());
  }

  // int32 varSize = 5;
  if (this->varsize() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_varsize());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigSnapSeven_PLCConfig_MemoryTag::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ConfigSnapSeven.PLCConfig.MemoryTag)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigSnapSeven_PLCConfig_MemoryTag* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ConfigSnapSeven_PLCConfig_MemoryTag>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ConfigSnapSeven.PLCConfig.MemoryTag)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ConfigSnapSeven.PLCConfig.MemoryTag)
    MergeFrom(*source);
  }
}

void ConfigSnapSeven_PLCConfig_MemoryTag::MergeFrom(const ConfigSnapSeven_PLCConfig_MemoryTag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ConfigSnapSeven.PLCConfig.MemoryTag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tagname().size() > 0) {

    tagname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tagname_);
  }
  if (from.tagid().size() > 0) {

    tagid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tagid_);
  }
  if (from.functioncode().size() > 0) {

    functioncode_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.functioncode_);
  }
  if (from.startaddress() != 0) {
    _internal_set_startaddress(from._internal_startaddress());
  }
  if (from.varsize() != 0) {
    _internal_set_varsize(from._internal_varsize());
  }
}

void ConfigSnapSeven_PLCConfig_MemoryTag::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ConfigSnapSeven.PLCConfig.MemoryTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigSnapSeven_PLCConfig_MemoryTag::CopyFrom(const ConfigSnapSeven_PLCConfig_MemoryTag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ConfigSnapSeven.PLCConfig.MemoryTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigSnapSeven_PLCConfig_MemoryTag::IsInitialized() const {
  return true;
}

void ConfigSnapSeven_PLCConfig_MemoryTag::InternalSwap(ConfigSnapSeven_PLCConfig_MemoryTag* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  tagname_.Swap(&other->tagname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tagid_.Swap(&other->tagid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  functioncode_.Swap(&other->functioncode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(startaddress_, other->startaddress_);
  swap(varsize_, other->varsize_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigSnapSeven_PLCConfig_MemoryTag::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ConfigSnapSeven_PLCConfig::InitAsDefaultInstance() {
}
class ConfigSnapSeven_PLCConfig::_Internal {
 public:
};

ConfigSnapSeven_PLCConfig::ConfigSnapSeven_PLCConfig()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigSnapSeven.PLCConfig)
}
ConfigSnapSeven_PLCConfig::ConfigSnapSeven_PLCConfig(const ConfigSnapSeven_PLCConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      iotag_(from.iotag_),
      datablocktag_(from.datablocktag_),
      memorytag_(from.memorytag_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  plcname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_plcname().empty()) {
    plcname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.plcname_);
  }
  plcid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_plcid().empty()) {
    plcid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.plcid_);
  }
  plcaddress_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_plcaddress().empty()) {
    plcaddress_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.plcaddress_);
  }
  plcip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_plcip().empty()) {
    plcip_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.plcip_);
  }
  plcport_ = from.plcport_;
  // @@protoc_insertion_point(copy_constructor:ConfigSnapSeven.PLCConfig)
}

void ConfigSnapSeven_PLCConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ConfigSnapSeven_PLCConfig_s7_2eproto.base);
  plcname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  plcid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  plcaddress_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  plcip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  plcport_ = 0;
}

ConfigSnapSeven_PLCConfig::~ConfigSnapSeven_PLCConfig() {
  // @@protoc_insertion_point(destructor:ConfigSnapSeven.PLCConfig)
  SharedDtor();
}

void ConfigSnapSeven_PLCConfig::SharedDtor() {
  plcname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  plcid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  plcaddress_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  plcip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ConfigSnapSeven_PLCConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConfigSnapSeven_PLCConfig& ConfigSnapSeven_PLCConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ConfigSnapSeven_PLCConfig_s7_2eproto.base);
  return *internal_default_instance();
}


void ConfigSnapSeven_PLCConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:ConfigSnapSeven.PLCConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  iotag_.Clear();
  datablocktag_.Clear();
  memorytag_.Clear();
  plcname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  plcid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  plcaddress_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  plcip_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  plcport_ = 0;
  _internal_metadata_.Clear();
}

const char* ConfigSnapSeven_PLCConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string plcName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_plcname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ConfigSnapSeven.PLCConfig.plcName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string plcID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_plcid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ConfigSnapSeven.PLCConfig.plcID"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string plcAddress = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_plcaddress();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ConfigSnapSeven.PLCConfig.plcAddress"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 plcPort = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          plcport_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string plcIp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_plcip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ConfigSnapSeven.PLCConfig.plcIp"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ConfigSnapSeven.PLCConfig.IoTag iotag = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_iotag(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ConfigSnapSeven.PLCConfig.DataBlockTag datablocktag = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_datablocktag(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ConfigSnapSeven.PLCConfig.MemoryTag memoryTag = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_memorytag(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ConfigSnapSeven_PLCConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigSnapSeven.PLCConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string plcName = 1;
  if (this->plcname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_plcname().data(), static_cast<int>(this->_internal_plcname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ConfigSnapSeven.PLCConfig.plcName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_plcname(), target);
  }

  // string plcID = 2;
  if (this->plcid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_plcid().data(), static_cast<int>(this->_internal_plcid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ConfigSnapSeven.PLCConfig.plcID");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_plcid(), target);
  }

  // string plcAddress = 3;
  if (this->plcaddress().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_plcaddress().data(), static_cast<int>(this->_internal_plcaddress().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ConfigSnapSeven.PLCConfig.plcAddress");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_plcaddress(), target);
  }

  // int32 plcPort = 4;
  if (this->plcport() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_plcport(), target);
  }

  // string plcIp = 5;
  if (this->plcip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_plcip().data(), static_cast<int>(this->_internal_plcip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ConfigSnapSeven.PLCConfig.plcIp");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_plcip(), target);
  }

  // repeated .ConfigSnapSeven.PLCConfig.IoTag iotag = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_iotag_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_iotag(i), target, stream);
  }

  // repeated .ConfigSnapSeven.PLCConfig.DataBlockTag datablocktag = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_datablocktag_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, this->_internal_datablocktag(i), target, stream);
  }

  // repeated .ConfigSnapSeven.PLCConfig.MemoryTag memoryTag = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_memorytag_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, this->_internal_memorytag(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigSnapSeven.PLCConfig)
  return target;
}

size_t ConfigSnapSeven_PLCConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ConfigSnapSeven.PLCConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ConfigSnapSeven.PLCConfig.IoTag iotag = 6;
  total_size += 1UL * this->_internal_iotag_size();
  for (const auto& msg : this->iotag_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ConfigSnapSeven.PLCConfig.DataBlockTag datablocktag = 7;
  total_size += 1UL * this->_internal_datablocktag_size();
  for (const auto& msg : this->datablocktag_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ConfigSnapSeven.PLCConfig.MemoryTag memoryTag = 8;
  total_size += 1UL * this->_internal_memorytag_size();
  for (const auto& msg : this->memorytag_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string plcName = 1;
  if (this->plcname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_plcname());
  }

  // string plcID = 2;
  if (this->plcid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_plcid());
  }

  // string plcAddress = 3;
  if (this->plcaddress().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_plcaddress());
  }

  // string plcIp = 5;
  if (this->plcip().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_plcip());
  }

  // int32 plcPort = 4;
  if (this->plcport() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_plcport());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigSnapSeven_PLCConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ConfigSnapSeven.PLCConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigSnapSeven_PLCConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ConfigSnapSeven_PLCConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ConfigSnapSeven.PLCConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ConfigSnapSeven.PLCConfig)
    MergeFrom(*source);
  }
}

void ConfigSnapSeven_PLCConfig::MergeFrom(const ConfigSnapSeven_PLCConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ConfigSnapSeven.PLCConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  iotag_.MergeFrom(from.iotag_);
  datablocktag_.MergeFrom(from.datablocktag_);
  memorytag_.MergeFrom(from.memorytag_);
  if (from.plcname().size() > 0) {

    plcname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.plcname_);
  }
  if (from.plcid().size() > 0) {

    plcid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.plcid_);
  }
  if (from.plcaddress().size() > 0) {

    plcaddress_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.plcaddress_);
  }
  if (from.plcip().size() > 0) {

    plcip_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.plcip_);
  }
  if (from.plcport() != 0) {
    _internal_set_plcport(from._internal_plcport());
  }
}

void ConfigSnapSeven_PLCConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ConfigSnapSeven.PLCConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigSnapSeven_PLCConfig::CopyFrom(const ConfigSnapSeven_PLCConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ConfigSnapSeven.PLCConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigSnapSeven_PLCConfig::IsInitialized() const {
  return true;
}

void ConfigSnapSeven_PLCConfig::InternalSwap(ConfigSnapSeven_PLCConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  iotag_.InternalSwap(&other->iotag_);
  datablocktag_.InternalSwap(&other->datablocktag_);
  memorytag_.InternalSwap(&other->memorytag_);
  plcname_.Swap(&other->plcname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  plcid_.Swap(&other->plcid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  plcaddress_.Swap(&other->plcaddress_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  plcip_.Swap(&other->plcip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(plcport_, other->plcport_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigSnapSeven_PLCConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ConfigSnapSeven::InitAsDefaultInstance() {
}
class ConfigSnapSeven::_Internal {
 public:
};

ConfigSnapSeven::ConfigSnapSeven()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfigSnapSeven)
}
ConfigSnapSeven::ConfigSnapSeven(const ConfigSnapSeven& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      plcconfig_(from.plcconfig_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ConfigSnapSeven)
}

void ConfigSnapSeven::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ConfigSnapSeven_s7_2eproto.base);
}

ConfigSnapSeven::~ConfigSnapSeven() {
  // @@protoc_insertion_point(destructor:ConfigSnapSeven)
  SharedDtor();
}

void ConfigSnapSeven::SharedDtor() {
}

void ConfigSnapSeven::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConfigSnapSeven& ConfigSnapSeven::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ConfigSnapSeven_s7_2eproto.base);
  return *internal_default_instance();
}


void ConfigSnapSeven::Clear() {
// @@protoc_insertion_point(message_clear_start:ConfigSnapSeven)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  plcconfig_.Clear();
  _internal_metadata_.Clear();
}

const char* ConfigSnapSeven::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ConfigSnapSeven.PLCConfig pLCConfig = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_plcconfig(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ConfigSnapSeven::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigSnapSeven)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ConfigSnapSeven.PLCConfig pLCConfig = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_plcconfig_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_plcconfig(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigSnapSeven)
  return target;
}

size_t ConfigSnapSeven::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ConfigSnapSeven)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ConfigSnapSeven.PLCConfig pLCConfig = 1;
  total_size += 1UL * this->_internal_plcconfig_size();
  for (const auto& msg : this->plcconfig_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigSnapSeven::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ConfigSnapSeven)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigSnapSeven* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ConfigSnapSeven>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ConfigSnapSeven)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ConfigSnapSeven)
    MergeFrom(*source);
  }
}

void ConfigSnapSeven::MergeFrom(const ConfigSnapSeven& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ConfigSnapSeven)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  plcconfig_.MergeFrom(from.plcconfig_);
}

void ConfigSnapSeven::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ConfigSnapSeven)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigSnapSeven::CopyFrom(const ConfigSnapSeven& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ConfigSnapSeven)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigSnapSeven::IsInitialized() const {
  return true;
}

void ConfigSnapSeven::InternalSwap(ConfigSnapSeven* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  plcconfig_.InternalSwap(&other->plcconfig_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigSnapSeven::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::SnapSevenConfigResponse* Arena::CreateMaybeMessage< ::SnapSevenConfigResponse >(Arena* arena) {
  return Arena::CreateInternal< ::SnapSevenConfigResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ConfigSnapSeven_PLCConfig_IoTag* Arena::CreateMaybeMessage< ::ConfigSnapSeven_PLCConfig_IoTag >(Arena* arena) {
  return Arena::CreateInternal< ::ConfigSnapSeven_PLCConfig_IoTag >(arena);
}
template<> PROTOBUF_NOINLINE ::ConfigSnapSeven_PLCConfig_DataBlockTag* Arena::CreateMaybeMessage< ::ConfigSnapSeven_PLCConfig_DataBlockTag >(Arena* arena) {
  return Arena::CreateInternal< ::ConfigSnapSeven_PLCConfig_DataBlockTag >(arena);
}
template<> PROTOBUF_NOINLINE ::ConfigSnapSeven_PLCConfig_MemoryTag* Arena::CreateMaybeMessage< ::ConfigSnapSeven_PLCConfig_MemoryTag >(Arena* arena) {
  return Arena::CreateInternal< ::ConfigSnapSeven_PLCConfig_MemoryTag >(arena);
}
template<> PROTOBUF_NOINLINE ::ConfigSnapSeven_PLCConfig* Arena::CreateMaybeMessage< ::ConfigSnapSeven_PLCConfig >(Arena* arena) {
  return Arena::CreateInternal< ::ConfigSnapSeven_PLCConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::ConfigSnapSeven* Arena::CreateMaybeMessage< ::ConfigSnapSeven >(Arena* arena) {
  return Arena::CreateInternal< ::ConfigSnapSeven >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
