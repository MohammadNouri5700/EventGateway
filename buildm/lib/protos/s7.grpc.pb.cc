// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: s7.proto

#include "s7.pb.h"
#include "s7.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>

static const char* SystemSnapSevenConfig_method_names[] = {
  "/SystemSnapSevenConfig/SendSystemSnapSevenConfig",
};

std::unique_ptr< SystemSnapSevenConfig::Stub> SystemSnapSevenConfig::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< SystemSnapSevenConfig::Stub> stub(new SystemSnapSevenConfig::Stub(channel));
  return stub;
}

SystemSnapSevenConfig::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_SendSystemSnapSevenConfig_(SystemSnapSevenConfig_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status SystemSnapSevenConfig::Stub::SendSystemSnapSevenConfig(::grpc::ClientContext* context, const ::ConfigSnapSeven& request, ::SnapSevenConfigResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_SendSystemSnapSevenConfig_, context, request, response);
}

void SystemSnapSevenConfig::Stub::experimental_async::SendSystemSnapSevenConfig(::grpc::ClientContext* context, const ::ConfigSnapSeven* request, ::SnapSevenConfigResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc_impl::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_SendSystemSnapSevenConfig_, context, request, response, std::move(f));
}

void SystemSnapSevenConfig::Stub::experimental_async::SendSystemSnapSevenConfig(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::SnapSevenConfigResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc_impl::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_SendSystemSnapSevenConfig_, context, request, response, std::move(f));
}

void SystemSnapSevenConfig::Stub::experimental_async::SendSystemSnapSevenConfig(::grpc::ClientContext* context, const ::ConfigSnapSeven* request, ::SnapSevenConfigResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc_impl::internal::ClientCallbackUnaryFactory::Create(stub_->channel_.get(), stub_->rpcmethod_SendSystemSnapSevenConfig_, context, request, response, reactor);
}

void SystemSnapSevenConfig::Stub::experimental_async::SendSystemSnapSevenConfig(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::SnapSevenConfigResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc_impl::internal::ClientCallbackUnaryFactory::Create(stub_->channel_.get(), stub_->rpcmethod_SendSystemSnapSevenConfig_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::SnapSevenConfigResponse>* SystemSnapSevenConfig::Stub::AsyncSendSystemSnapSevenConfigRaw(::grpc::ClientContext* context, const ::ConfigSnapSeven& request, ::grpc::CompletionQueue* cq) {
  return ::grpc_impl::internal::ClientAsyncResponseReaderFactory< ::SnapSevenConfigResponse>::Create(channel_.get(), cq, rpcmethod_SendSystemSnapSevenConfig_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::SnapSevenConfigResponse>* SystemSnapSevenConfig::Stub::PrepareAsyncSendSystemSnapSevenConfigRaw(::grpc::ClientContext* context, const ::ConfigSnapSeven& request, ::grpc::CompletionQueue* cq) {
  return ::grpc_impl::internal::ClientAsyncResponseReaderFactory< ::SnapSevenConfigResponse>::Create(channel_.get(), cq, rpcmethod_SendSystemSnapSevenConfig_, context, request, false);
}

SystemSnapSevenConfig::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      SystemSnapSevenConfig_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< SystemSnapSevenConfig::Service, ::ConfigSnapSeven, ::SnapSevenConfigResponse>(
          std::mem_fn(&SystemSnapSevenConfig::Service::SendSystemSnapSevenConfig), this)));
}

SystemSnapSevenConfig::Service::~Service() {
}

::grpc::Status SystemSnapSevenConfig::Service::SendSystemSnapSevenConfig(::grpc::ServerContext* context, const ::ConfigSnapSeven* request, ::SnapSevenConfigResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


