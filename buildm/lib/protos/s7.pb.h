// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: s7.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_s7_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_s7_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_s7_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_s7_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[6]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_s7_2eproto;
class ConfigSnapSeven;
class ConfigSnapSevenDefaultTypeInternal;
extern ConfigSnapSevenDefaultTypeInternal _ConfigSnapSeven_default_instance_;
class ConfigSnapSeven_PLCConfig;
class ConfigSnapSeven_PLCConfigDefaultTypeInternal;
extern ConfigSnapSeven_PLCConfigDefaultTypeInternal _ConfigSnapSeven_PLCConfig_default_instance_;
class ConfigSnapSeven_PLCConfig_DataBlockTag;
class ConfigSnapSeven_PLCConfig_DataBlockTagDefaultTypeInternal;
extern ConfigSnapSeven_PLCConfig_DataBlockTagDefaultTypeInternal _ConfigSnapSeven_PLCConfig_DataBlockTag_default_instance_;
class ConfigSnapSeven_PLCConfig_IoTag;
class ConfigSnapSeven_PLCConfig_IoTagDefaultTypeInternal;
extern ConfigSnapSeven_PLCConfig_IoTagDefaultTypeInternal _ConfigSnapSeven_PLCConfig_IoTag_default_instance_;
class ConfigSnapSeven_PLCConfig_MemoryTag;
class ConfigSnapSeven_PLCConfig_MemoryTagDefaultTypeInternal;
extern ConfigSnapSeven_PLCConfig_MemoryTagDefaultTypeInternal _ConfigSnapSeven_PLCConfig_MemoryTag_default_instance_;
class SnapSevenConfigResponse;
class SnapSevenConfigResponseDefaultTypeInternal;
extern SnapSevenConfigResponseDefaultTypeInternal _SnapSevenConfigResponse_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::ConfigSnapSeven* Arena::CreateMaybeMessage<::ConfigSnapSeven>(Arena*);
template<> ::ConfigSnapSeven_PLCConfig* Arena::CreateMaybeMessage<::ConfigSnapSeven_PLCConfig>(Arena*);
template<> ::ConfigSnapSeven_PLCConfig_DataBlockTag* Arena::CreateMaybeMessage<::ConfigSnapSeven_PLCConfig_DataBlockTag>(Arena*);
template<> ::ConfigSnapSeven_PLCConfig_IoTag* Arena::CreateMaybeMessage<::ConfigSnapSeven_PLCConfig_IoTag>(Arena*);
template<> ::ConfigSnapSeven_PLCConfig_MemoryTag* Arena::CreateMaybeMessage<::ConfigSnapSeven_PLCConfig_MemoryTag>(Arena*);
template<> ::SnapSevenConfigResponse* Arena::CreateMaybeMessage<::SnapSevenConfigResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum ParameterDataType : int {
  BOOLEAN = 0,
  INT8 = 1,
  UINT8 = 2,
  INT16 = 3,
  UINT16 = 4,
  INT32 = 5,
  UINT32 = 6,
  INT64 = 7,
  UINT64 = 8,
  FLOAT32 = 9,
  FLOAT64 = 10,
  STRING = 11,
  ParameterDataType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ParameterDataType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool ParameterDataType_IsValid(int value);
constexpr ParameterDataType ParameterDataType_MIN = BOOLEAN;
constexpr ParameterDataType ParameterDataType_MAX = STRING;
constexpr int ParameterDataType_ARRAYSIZE = ParameterDataType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ParameterDataType_descriptor();
template<typename T>
inline const std::string& ParameterDataType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ParameterDataType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ParameterDataType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ParameterDataType_descriptor(), enum_t_value);
}
inline bool ParameterDataType_Parse(
    const std::string& name, ParameterDataType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ParameterDataType>(
    ParameterDataType_descriptor(), name, value);
}
// ===================================================================

class SnapSevenConfigResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SnapSevenConfigResponse) */ {
 public:
  SnapSevenConfigResponse();
  virtual ~SnapSevenConfigResponse();

  SnapSevenConfigResponse(const SnapSevenConfigResponse& from);
  SnapSevenConfigResponse(SnapSevenConfigResponse&& from) noexcept
    : SnapSevenConfigResponse() {
    *this = ::std::move(from);
  }

  inline SnapSevenConfigResponse& operator=(const SnapSevenConfigResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SnapSevenConfigResponse& operator=(SnapSevenConfigResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SnapSevenConfigResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SnapSevenConfigResponse* internal_default_instance() {
    return reinterpret_cast<const SnapSevenConfigResponse*>(
               &_SnapSevenConfigResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SnapSevenConfigResponse& a, SnapSevenConfigResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SnapSevenConfigResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SnapSevenConfigResponse* New() const final {
    return CreateMaybeMessage<SnapSevenConfigResponse>(nullptr);
  }

  SnapSevenConfigResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SnapSevenConfigResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SnapSevenConfigResponse& from);
  void MergeFrom(const SnapSevenConfigResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SnapSevenConfigResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SnapSevenConfigResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_s7_2eproto);
    return ::descriptor_table_s7_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorDescFieldNumber = 3,
    kSuccessFieldNumber = 1,
    kErrorCodeFieldNumber = 2,
  };
  // string errorDesc = 3;
  void clear_errordesc();
  const std::string& errordesc() const;
  void set_errordesc(const std::string& value);
  void set_errordesc(std::string&& value);
  void set_errordesc(const char* value);
  void set_errordesc(const char* value, size_t size);
  std::string* mutable_errordesc();
  std::string* release_errordesc();
  void set_allocated_errordesc(std::string* errordesc);
  private:
  const std::string& _internal_errordesc() const;
  void _internal_set_errordesc(const std::string& value);
  std::string* _internal_mutable_errordesc();
  public:

  // bool Success = 1;
  void clear_success();
  bool success() const;
  void set_success(bool value);
  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);
  public:

  // int32 errorCode = 2;
  void clear_errorcode();
  ::PROTOBUF_NAMESPACE_ID::int32 errorcode() const;
  void set_errorcode(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_errorcode() const;
  void _internal_set_errorcode(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:SnapSevenConfigResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr errordesc_;
  bool success_;
  ::PROTOBUF_NAMESPACE_ID::int32 errorcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_s7_2eproto;
};
// -------------------------------------------------------------------

class ConfigSnapSeven_PLCConfig_IoTag :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ConfigSnapSeven.PLCConfig.IoTag) */ {
 public:
  ConfigSnapSeven_PLCConfig_IoTag();
  virtual ~ConfigSnapSeven_PLCConfig_IoTag();

  ConfigSnapSeven_PLCConfig_IoTag(const ConfigSnapSeven_PLCConfig_IoTag& from);
  ConfigSnapSeven_PLCConfig_IoTag(ConfigSnapSeven_PLCConfig_IoTag&& from) noexcept
    : ConfigSnapSeven_PLCConfig_IoTag() {
    *this = ::std::move(from);
  }

  inline ConfigSnapSeven_PLCConfig_IoTag& operator=(const ConfigSnapSeven_PLCConfig_IoTag& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConfigSnapSeven_PLCConfig_IoTag& operator=(ConfigSnapSeven_PLCConfig_IoTag&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ConfigSnapSeven_PLCConfig_IoTag& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigSnapSeven_PLCConfig_IoTag* internal_default_instance() {
    return reinterpret_cast<const ConfigSnapSeven_PLCConfig_IoTag*>(
               &_ConfigSnapSeven_PLCConfig_IoTag_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ConfigSnapSeven_PLCConfig_IoTag& a, ConfigSnapSeven_PLCConfig_IoTag& b) {
    a.Swap(&b);
  }
  inline void Swap(ConfigSnapSeven_PLCConfig_IoTag* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ConfigSnapSeven_PLCConfig_IoTag* New() const final {
    return CreateMaybeMessage<ConfigSnapSeven_PLCConfig_IoTag>(nullptr);
  }

  ConfigSnapSeven_PLCConfig_IoTag* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ConfigSnapSeven_PLCConfig_IoTag>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ConfigSnapSeven_PLCConfig_IoTag& from);
  void MergeFrom(const ConfigSnapSeven_PLCConfig_IoTag& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigSnapSeven_PLCConfig_IoTag* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ConfigSnapSeven.PLCConfig.IoTag";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_s7_2eproto);
    return ::descriptor_table_s7_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTagNameFieldNumber = 1,
    kTagIdFieldNumber = 2,
    kTagTypeFieldNumber = 3,
    kIoTypeFieldNumber = 4,
    kWordCountFieldNumber = 5,
    kBitCountFieldNumber = 6,
    kByteCountFieldNumber = 7,
    kIntervalFieldNumber = 8,
    kOperationFieldNumber = 9,
  };
  // string tagName = 1;
  void clear_tagname();
  const std::string& tagname() const;
  void set_tagname(const std::string& value);
  void set_tagname(std::string&& value);
  void set_tagname(const char* value);
  void set_tagname(const char* value, size_t size);
  std::string* mutable_tagname();
  std::string* release_tagname();
  void set_allocated_tagname(std::string* tagname);
  private:
  const std::string& _internal_tagname() const;
  void _internal_set_tagname(const std::string& value);
  std::string* _internal_mutable_tagname();
  public:

  // string tagId = 2;
  void clear_tagid();
  const std::string& tagid() const;
  void set_tagid(const std::string& value);
  void set_tagid(std::string&& value);
  void set_tagid(const char* value);
  void set_tagid(const char* value, size_t size);
  std::string* mutable_tagid();
  std::string* release_tagid();
  void set_allocated_tagid(std::string* tagid);
  private:
  const std::string& _internal_tagid() const;
  void _internal_set_tagid(const std::string& value);
  std::string* _internal_mutable_tagid();
  public:

  // string tagType = 3;
  void clear_tagtype();
  const std::string& tagtype() const;
  void set_tagtype(const std::string& value);
  void set_tagtype(std::string&& value);
  void set_tagtype(const char* value);
  void set_tagtype(const char* value, size_t size);
  std::string* mutable_tagtype();
  std::string* release_tagtype();
  void set_allocated_tagtype(std::string* tagtype);
  private:
  const std::string& _internal_tagtype() const;
  void _internal_set_tagtype(const std::string& value);
  std::string* _internal_mutable_tagtype();
  public:

  // string ioType = 4;
  void clear_iotype();
  const std::string& iotype() const;
  void set_iotype(const std::string& value);
  void set_iotype(std::string&& value);
  void set_iotype(const char* value);
  void set_iotype(const char* value, size_t size);
  std::string* mutable_iotype();
  std::string* release_iotype();
  void set_allocated_iotype(std::string* iotype);
  private:
  const std::string& _internal_iotype() const;
  void _internal_set_iotype(const std::string& value);
  std::string* _internal_mutable_iotype();
  public:

  // int32 wordCount = 5;
  void clear_wordcount();
  ::PROTOBUF_NAMESPACE_ID::int32 wordcount() const;
  void set_wordcount(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_wordcount() const;
  void _internal_set_wordcount(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 bitCount = 6;
  void clear_bitcount();
  ::PROTOBUF_NAMESPACE_ID::int32 bitcount() const;
  void set_bitcount(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bitcount() const;
  void _internal_set_bitcount(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 byteCount = 7;
  void clear_bytecount();
  ::PROTOBUF_NAMESPACE_ID::int32 bytecount() const;
  void set_bytecount(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bytecount() const;
  void _internal_set_bytecount(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 interval = 8;
  void clear_interval();
  ::PROTOBUF_NAMESPACE_ID::int32 interval() const;
  void set_interval(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_interval() const;
  void _internal_set_interval(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool operation = 9;
  void clear_operation();
  bool operation() const;
  void set_operation(bool value);
  private:
  bool _internal_operation() const;
  void _internal_set_operation(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ConfigSnapSeven.PLCConfig.IoTag)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tagname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tagid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tagtype_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr iotype_;
  ::PROTOBUF_NAMESPACE_ID::int32 wordcount_;
  ::PROTOBUF_NAMESPACE_ID::int32 bitcount_;
  ::PROTOBUF_NAMESPACE_ID::int32 bytecount_;
  ::PROTOBUF_NAMESPACE_ID::int32 interval_;
  bool operation_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_s7_2eproto;
};
// -------------------------------------------------------------------

class ConfigSnapSeven_PLCConfig_DataBlockTag :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ConfigSnapSeven.PLCConfig.DataBlockTag) */ {
 public:
  ConfigSnapSeven_PLCConfig_DataBlockTag();
  virtual ~ConfigSnapSeven_PLCConfig_DataBlockTag();

  ConfigSnapSeven_PLCConfig_DataBlockTag(const ConfigSnapSeven_PLCConfig_DataBlockTag& from);
  ConfigSnapSeven_PLCConfig_DataBlockTag(ConfigSnapSeven_PLCConfig_DataBlockTag&& from) noexcept
    : ConfigSnapSeven_PLCConfig_DataBlockTag() {
    *this = ::std::move(from);
  }

  inline ConfigSnapSeven_PLCConfig_DataBlockTag& operator=(const ConfigSnapSeven_PLCConfig_DataBlockTag& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConfigSnapSeven_PLCConfig_DataBlockTag& operator=(ConfigSnapSeven_PLCConfig_DataBlockTag&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ConfigSnapSeven_PLCConfig_DataBlockTag& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigSnapSeven_PLCConfig_DataBlockTag* internal_default_instance() {
    return reinterpret_cast<const ConfigSnapSeven_PLCConfig_DataBlockTag*>(
               &_ConfigSnapSeven_PLCConfig_DataBlockTag_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ConfigSnapSeven_PLCConfig_DataBlockTag& a, ConfigSnapSeven_PLCConfig_DataBlockTag& b) {
    a.Swap(&b);
  }
  inline void Swap(ConfigSnapSeven_PLCConfig_DataBlockTag* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ConfigSnapSeven_PLCConfig_DataBlockTag* New() const final {
    return CreateMaybeMessage<ConfigSnapSeven_PLCConfig_DataBlockTag>(nullptr);
  }

  ConfigSnapSeven_PLCConfig_DataBlockTag* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ConfigSnapSeven_PLCConfig_DataBlockTag>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ConfigSnapSeven_PLCConfig_DataBlockTag& from);
  void MergeFrom(const ConfigSnapSeven_PLCConfig_DataBlockTag& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigSnapSeven_PLCConfig_DataBlockTag* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ConfigSnapSeven.PLCConfig.DataBlockTag";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_s7_2eproto);
    return ::descriptor_table_s7_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTagNameFieldNumber = 1,
    kTagIdFieldNumber = 2,
    kFunctionCodeFieldNumber = 3,
    kCountFieldNumber = 4,
    kParameterFieldNumber = 5,
    kStartAddressFieldNumber = 6,
    kBitNumberFieldNumber = 7,
    kDbNumberFieldNumber = 8,
    kIntervalFieldNumber = 9,
    kOperationFieldNumber = 10,
  };
  // string tagName = 1;
  void clear_tagname();
  const std::string& tagname() const;
  void set_tagname(const std::string& value);
  void set_tagname(std::string&& value);
  void set_tagname(const char* value);
  void set_tagname(const char* value, size_t size);
  std::string* mutable_tagname();
  std::string* release_tagname();
  void set_allocated_tagname(std::string* tagname);
  private:
  const std::string& _internal_tagname() const;
  void _internal_set_tagname(const std::string& value);
  std::string* _internal_mutable_tagname();
  public:

  // string tagId = 2;
  void clear_tagid();
  const std::string& tagid() const;
  void set_tagid(const std::string& value);
  void set_tagid(std::string&& value);
  void set_tagid(const char* value);
  void set_tagid(const char* value, size_t size);
  std::string* mutable_tagid();
  std::string* release_tagid();
  void set_allocated_tagid(std::string* tagid);
  private:
  const std::string& _internal_tagid() const;
  void _internal_set_tagid(const std::string& value);
  std::string* _internal_mutable_tagid();
  public:

  // string functionCode = 3;
  void clear_functioncode();
  const std::string& functioncode() const;
  void set_functioncode(const std::string& value);
  void set_functioncode(std::string&& value);
  void set_functioncode(const char* value);
  void set_functioncode(const char* value, size_t size);
  std::string* mutable_functioncode();
  std::string* release_functioncode();
  void set_allocated_functioncode(std::string* functioncode);
  private:
  const std::string& _internal_functioncode() const;
  void _internal_set_functioncode(const std::string& value);
  std::string* _internal_mutable_functioncode();
  public:

  // int32 count = 4;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::int32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // .ParameterDataType parameter = 5;
  void clear_parameter();
  ::ParameterDataType parameter() const;
  void set_parameter(::ParameterDataType value);
  private:
  ::ParameterDataType _internal_parameter() const;
  void _internal_set_parameter(::ParameterDataType value);
  public:

  // int32 startAddress = 6;
  void clear_startaddress();
  ::PROTOBUF_NAMESPACE_ID::int32 startaddress() const;
  void set_startaddress(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_startaddress() const;
  void _internal_set_startaddress(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 bitNumber = 7;
  void clear_bitnumber();
  ::PROTOBUF_NAMESPACE_ID::int32 bitnumber() const;
  void set_bitnumber(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bitnumber() const;
  void _internal_set_bitnumber(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 dbNumber = 8;
  void clear_dbnumber();
  ::PROTOBUF_NAMESPACE_ID::int32 dbnumber() const;
  void set_dbnumber(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_dbnumber() const;
  void _internal_set_dbnumber(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 interval = 9;
  void clear_interval();
  ::PROTOBUF_NAMESPACE_ID::int32 interval() const;
  void set_interval(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_interval() const;
  void _internal_set_interval(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool operation = 10;
  void clear_operation();
  bool operation() const;
  void set_operation(bool value);
  private:
  bool _internal_operation() const;
  void _internal_set_operation(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ConfigSnapSeven.PLCConfig.DataBlockTag)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tagname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tagid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr functioncode_;
  ::PROTOBUF_NAMESPACE_ID::int32 count_;
  int parameter_;
  ::PROTOBUF_NAMESPACE_ID::int32 startaddress_;
  ::PROTOBUF_NAMESPACE_ID::int32 bitnumber_;
  ::PROTOBUF_NAMESPACE_ID::int32 dbnumber_;
  ::PROTOBUF_NAMESPACE_ID::int32 interval_;
  bool operation_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_s7_2eproto;
};
// -------------------------------------------------------------------

class ConfigSnapSeven_PLCConfig_MemoryTag :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ConfigSnapSeven.PLCConfig.MemoryTag) */ {
 public:
  ConfigSnapSeven_PLCConfig_MemoryTag();
  virtual ~ConfigSnapSeven_PLCConfig_MemoryTag();

  ConfigSnapSeven_PLCConfig_MemoryTag(const ConfigSnapSeven_PLCConfig_MemoryTag& from);
  ConfigSnapSeven_PLCConfig_MemoryTag(ConfigSnapSeven_PLCConfig_MemoryTag&& from) noexcept
    : ConfigSnapSeven_PLCConfig_MemoryTag() {
    *this = ::std::move(from);
  }

  inline ConfigSnapSeven_PLCConfig_MemoryTag& operator=(const ConfigSnapSeven_PLCConfig_MemoryTag& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConfigSnapSeven_PLCConfig_MemoryTag& operator=(ConfigSnapSeven_PLCConfig_MemoryTag&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ConfigSnapSeven_PLCConfig_MemoryTag& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigSnapSeven_PLCConfig_MemoryTag* internal_default_instance() {
    return reinterpret_cast<const ConfigSnapSeven_PLCConfig_MemoryTag*>(
               &_ConfigSnapSeven_PLCConfig_MemoryTag_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ConfigSnapSeven_PLCConfig_MemoryTag& a, ConfigSnapSeven_PLCConfig_MemoryTag& b) {
    a.Swap(&b);
  }
  inline void Swap(ConfigSnapSeven_PLCConfig_MemoryTag* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ConfigSnapSeven_PLCConfig_MemoryTag* New() const final {
    return CreateMaybeMessage<ConfigSnapSeven_PLCConfig_MemoryTag>(nullptr);
  }

  ConfigSnapSeven_PLCConfig_MemoryTag* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ConfigSnapSeven_PLCConfig_MemoryTag>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ConfigSnapSeven_PLCConfig_MemoryTag& from);
  void MergeFrom(const ConfigSnapSeven_PLCConfig_MemoryTag& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigSnapSeven_PLCConfig_MemoryTag* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ConfigSnapSeven.PLCConfig.MemoryTag";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_s7_2eproto);
    return ::descriptor_table_s7_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTagNameFieldNumber = 1,
    kTagIdFieldNumber = 2,
    kFunctionCodeFieldNumber = 3,
    kStartAddressFieldNumber = 4,
    kVarSizeFieldNumber = 5,
    kIntervalFieldNumber = 6,
    kOperationFieldNumber = 7,
  };
  // string tagName = 1;
  void clear_tagname();
  const std::string& tagname() const;
  void set_tagname(const std::string& value);
  void set_tagname(std::string&& value);
  void set_tagname(const char* value);
  void set_tagname(const char* value, size_t size);
  std::string* mutable_tagname();
  std::string* release_tagname();
  void set_allocated_tagname(std::string* tagname);
  private:
  const std::string& _internal_tagname() const;
  void _internal_set_tagname(const std::string& value);
  std::string* _internal_mutable_tagname();
  public:

  // string tagId = 2;
  void clear_tagid();
  const std::string& tagid() const;
  void set_tagid(const std::string& value);
  void set_tagid(std::string&& value);
  void set_tagid(const char* value);
  void set_tagid(const char* value, size_t size);
  std::string* mutable_tagid();
  std::string* release_tagid();
  void set_allocated_tagid(std::string* tagid);
  private:
  const std::string& _internal_tagid() const;
  void _internal_set_tagid(const std::string& value);
  std::string* _internal_mutable_tagid();
  public:

  // string functionCode = 3;
  void clear_functioncode();
  const std::string& functioncode() const;
  void set_functioncode(const std::string& value);
  void set_functioncode(std::string&& value);
  void set_functioncode(const char* value);
  void set_functioncode(const char* value, size_t size);
  std::string* mutable_functioncode();
  std::string* release_functioncode();
  void set_allocated_functioncode(std::string* functioncode);
  private:
  const std::string& _internal_functioncode() const;
  void _internal_set_functioncode(const std::string& value);
  std::string* _internal_mutable_functioncode();
  public:

  // int32 startAddress = 4;
  void clear_startaddress();
  ::PROTOBUF_NAMESPACE_ID::int32 startaddress() const;
  void set_startaddress(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_startaddress() const;
  void _internal_set_startaddress(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 varSize = 5;
  void clear_varsize();
  ::PROTOBUF_NAMESPACE_ID::int32 varsize() const;
  void set_varsize(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_varsize() const;
  void _internal_set_varsize(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 interval = 6;
  void clear_interval();
  ::PROTOBUF_NAMESPACE_ID::int32 interval() const;
  void set_interval(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_interval() const;
  void _internal_set_interval(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool operation = 7;
  void clear_operation();
  bool operation() const;
  void set_operation(bool value);
  private:
  bool _internal_operation() const;
  void _internal_set_operation(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ConfigSnapSeven.PLCConfig.MemoryTag)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tagname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tagid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr functioncode_;
  ::PROTOBUF_NAMESPACE_ID::int32 startaddress_;
  ::PROTOBUF_NAMESPACE_ID::int32 varsize_;
  ::PROTOBUF_NAMESPACE_ID::int32 interval_;
  bool operation_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_s7_2eproto;
};
// -------------------------------------------------------------------

class ConfigSnapSeven_PLCConfig :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ConfigSnapSeven.PLCConfig) */ {
 public:
  ConfigSnapSeven_PLCConfig();
  virtual ~ConfigSnapSeven_PLCConfig();

  ConfigSnapSeven_PLCConfig(const ConfigSnapSeven_PLCConfig& from);
  ConfigSnapSeven_PLCConfig(ConfigSnapSeven_PLCConfig&& from) noexcept
    : ConfigSnapSeven_PLCConfig() {
    *this = ::std::move(from);
  }

  inline ConfigSnapSeven_PLCConfig& operator=(const ConfigSnapSeven_PLCConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConfigSnapSeven_PLCConfig& operator=(ConfigSnapSeven_PLCConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ConfigSnapSeven_PLCConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigSnapSeven_PLCConfig* internal_default_instance() {
    return reinterpret_cast<const ConfigSnapSeven_PLCConfig*>(
               &_ConfigSnapSeven_PLCConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ConfigSnapSeven_PLCConfig& a, ConfigSnapSeven_PLCConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(ConfigSnapSeven_PLCConfig* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ConfigSnapSeven_PLCConfig* New() const final {
    return CreateMaybeMessage<ConfigSnapSeven_PLCConfig>(nullptr);
  }

  ConfigSnapSeven_PLCConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ConfigSnapSeven_PLCConfig>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ConfigSnapSeven_PLCConfig& from);
  void MergeFrom(const ConfigSnapSeven_PLCConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigSnapSeven_PLCConfig* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ConfigSnapSeven.PLCConfig";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_s7_2eproto);
    return ::descriptor_table_s7_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef ConfigSnapSeven_PLCConfig_IoTag IoTag;
  typedef ConfigSnapSeven_PLCConfig_DataBlockTag DataBlockTag;
  typedef ConfigSnapSeven_PLCConfig_MemoryTag MemoryTag;

  // accessors -------------------------------------------------------

  enum : int {
    kIotagFieldNumber = 6,
    kDatablocktagFieldNumber = 7,
    kMemoryTagFieldNumber = 8,
    kPlcNameFieldNumber = 1,
    kPlcIDFieldNumber = 2,
    kPlcAddressFieldNumber = 3,
    kPlcIpFieldNumber = 5,
    kPlcPortFieldNumber = 4,
  };
  // repeated .ConfigSnapSeven.PLCConfig.IoTag iotag = 6;
  int iotag_size() const;
  private:
  int _internal_iotag_size() const;
  public:
  void clear_iotag();
  ::ConfigSnapSeven_PLCConfig_IoTag* mutable_iotag(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ConfigSnapSeven_PLCConfig_IoTag >*
      mutable_iotag();
  private:
  const ::ConfigSnapSeven_PLCConfig_IoTag& _internal_iotag(int index) const;
  ::ConfigSnapSeven_PLCConfig_IoTag* _internal_add_iotag();
  public:
  const ::ConfigSnapSeven_PLCConfig_IoTag& iotag(int index) const;
  ::ConfigSnapSeven_PLCConfig_IoTag* add_iotag();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ConfigSnapSeven_PLCConfig_IoTag >&
      iotag() const;

  // repeated .ConfigSnapSeven.PLCConfig.DataBlockTag datablocktag = 7;
  int datablocktag_size() const;
  private:
  int _internal_datablocktag_size() const;
  public:
  void clear_datablocktag();
  ::ConfigSnapSeven_PLCConfig_DataBlockTag* mutable_datablocktag(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ConfigSnapSeven_PLCConfig_DataBlockTag >*
      mutable_datablocktag();
  private:
  const ::ConfigSnapSeven_PLCConfig_DataBlockTag& _internal_datablocktag(int index) const;
  ::ConfigSnapSeven_PLCConfig_DataBlockTag* _internal_add_datablocktag();
  public:
  const ::ConfigSnapSeven_PLCConfig_DataBlockTag& datablocktag(int index) const;
  ::ConfigSnapSeven_PLCConfig_DataBlockTag* add_datablocktag();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ConfigSnapSeven_PLCConfig_DataBlockTag >&
      datablocktag() const;

  // repeated .ConfigSnapSeven.PLCConfig.MemoryTag memoryTag = 8;
  int memorytag_size() const;
  private:
  int _internal_memorytag_size() const;
  public:
  void clear_memorytag();
  ::ConfigSnapSeven_PLCConfig_MemoryTag* mutable_memorytag(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ConfigSnapSeven_PLCConfig_MemoryTag >*
      mutable_memorytag();
  private:
  const ::ConfigSnapSeven_PLCConfig_MemoryTag& _internal_memorytag(int index) const;
  ::ConfigSnapSeven_PLCConfig_MemoryTag* _internal_add_memorytag();
  public:
  const ::ConfigSnapSeven_PLCConfig_MemoryTag& memorytag(int index) const;
  ::ConfigSnapSeven_PLCConfig_MemoryTag* add_memorytag();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ConfigSnapSeven_PLCConfig_MemoryTag >&
      memorytag() const;

  // string plcName = 1;
  void clear_plcname();
  const std::string& plcname() const;
  void set_plcname(const std::string& value);
  void set_plcname(std::string&& value);
  void set_plcname(const char* value);
  void set_plcname(const char* value, size_t size);
  std::string* mutable_plcname();
  std::string* release_plcname();
  void set_allocated_plcname(std::string* plcname);
  private:
  const std::string& _internal_plcname() const;
  void _internal_set_plcname(const std::string& value);
  std::string* _internal_mutable_plcname();
  public:

  // string plcID = 2;
  void clear_plcid();
  const std::string& plcid() const;
  void set_plcid(const std::string& value);
  void set_plcid(std::string&& value);
  void set_plcid(const char* value);
  void set_plcid(const char* value, size_t size);
  std::string* mutable_plcid();
  std::string* release_plcid();
  void set_allocated_plcid(std::string* plcid);
  private:
  const std::string& _internal_plcid() const;
  void _internal_set_plcid(const std::string& value);
  std::string* _internal_mutable_plcid();
  public:

  // string plcAddress = 3;
  void clear_plcaddress();
  const std::string& plcaddress() const;
  void set_plcaddress(const std::string& value);
  void set_plcaddress(std::string&& value);
  void set_plcaddress(const char* value);
  void set_plcaddress(const char* value, size_t size);
  std::string* mutable_plcaddress();
  std::string* release_plcaddress();
  void set_allocated_plcaddress(std::string* plcaddress);
  private:
  const std::string& _internal_plcaddress() const;
  void _internal_set_plcaddress(const std::string& value);
  std::string* _internal_mutable_plcaddress();
  public:

  // string plcIp = 5;
  void clear_plcip();
  const std::string& plcip() const;
  void set_plcip(const std::string& value);
  void set_plcip(std::string&& value);
  void set_plcip(const char* value);
  void set_plcip(const char* value, size_t size);
  std::string* mutable_plcip();
  std::string* release_plcip();
  void set_allocated_plcip(std::string* plcip);
  private:
  const std::string& _internal_plcip() const;
  void _internal_set_plcip(const std::string& value);
  std::string* _internal_mutable_plcip();
  public:

  // int32 plcPort = 4;
  void clear_plcport();
  ::PROTOBUF_NAMESPACE_ID::int32 plcport() const;
  void set_plcport(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_plcport() const;
  void _internal_set_plcport(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:ConfigSnapSeven.PLCConfig)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ConfigSnapSeven_PLCConfig_IoTag > iotag_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ConfigSnapSeven_PLCConfig_DataBlockTag > datablocktag_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ConfigSnapSeven_PLCConfig_MemoryTag > memorytag_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr plcname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr plcid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr plcaddress_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr plcip_;
  ::PROTOBUF_NAMESPACE_ID::int32 plcport_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_s7_2eproto;
};
// -------------------------------------------------------------------

class ConfigSnapSeven :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ConfigSnapSeven) */ {
 public:
  ConfigSnapSeven();
  virtual ~ConfigSnapSeven();

  ConfigSnapSeven(const ConfigSnapSeven& from);
  ConfigSnapSeven(ConfigSnapSeven&& from) noexcept
    : ConfigSnapSeven() {
    *this = ::std::move(from);
  }

  inline ConfigSnapSeven& operator=(const ConfigSnapSeven& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConfigSnapSeven& operator=(ConfigSnapSeven&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ConfigSnapSeven& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigSnapSeven* internal_default_instance() {
    return reinterpret_cast<const ConfigSnapSeven*>(
               &_ConfigSnapSeven_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ConfigSnapSeven& a, ConfigSnapSeven& b) {
    a.Swap(&b);
  }
  inline void Swap(ConfigSnapSeven* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ConfigSnapSeven* New() const final {
    return CreateMaybeMessage<ConfigSnapSeven>(nullptr);
  }

  ConfigSnapSeven* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ConfigSnapSeven>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ConfigSnapSeven& from);
  void MergeFrom(const ConfigSnapSeven& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigSnapSeven* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ConfigSnapSeven";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_s7_2eproto);
    return ::descriptor_table_s7_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef ConfigSnapSeven_PLCConfig PLCConfig;

  // accessors -------------------------------------------------------

  enum : int {
    kPLCConfigFieldNumber = 1,
  };
  // repeated .ConfigSnapSeven.PLCConfig pLCConfig = 1;
  int plcconfig_size() const;
  private:
  int _internal_plcconfig_size() const;
  public:
  void clear_plcconfig();
  ::ConfigSnapSeven_PLCConfig* mutable_plcconfig(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ConfigSnapSeven_PLCConfig >*
      mutable_plcconfig();
  private:
  const ::ConfigSnapSeven_PLCConfig& _internal_plcconfig(int index) const;
  ::ConfigSnapSeven_PLCConfig* _internal_add_plcconfig();
  public:
  const ::ConfigSnapSeven_PLCConfig& plcconfig(int index) const;
  ::ConfigSnapSeven_PLCConfig* add_plcconfig();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ConfigSnapSeven_PLCConfig >&
      plcconfig() const;

  // @@protoc_insertion_point(class_scope:ConfigSnapSeven)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ConfigSnapSeven_PLCConfig > plcconfig_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_s7_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SnapSevenConfigResponse

// bool Success = 1;
inline void SnapSevenConfigResponse::clear_success() {
  success_ = false;
}
inline bool SnapSevenConfigResponse::_internal_success() const {
  return success_;
}
inline bool SnapSevenConfigResponse::success() const {
  // @@protoc_insertion_point(field_get:SnapSevenConfigResponse.Success)
  return _internal_success();
}
inline void SnapSevenConfigResponse::_internal_set_success(bool value) {
  
  success_ = value;
}
inline void SnapSevenConfigResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:SnapSevenConfigResponse.Success)
}

// int32 errorCode = 2;
inline void SnapSevenConfigResponse::clear_errorcode() {
  errorcode_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SnapSevenConfigResponse::_internal_errorcode() const {
  return errorcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SnapSevenConfigResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:SnapSevenConfigResponse.errorCode)
  return _internal_errorcode();
}
inline void SnapSevenConfigResponse::_internal_set_errorcode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  errorcode_ = value;
}
inline void SnapSevenConfigResponse::set_errorcode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_errorcode(value);
  // @@protoc_insertion_point(field_set:SnapSevenConfigResponse.errorCode)
}

// string errorDesc = 3;
inline void SnapSevenConfigResponse::clear_errordesc() {
  errordesc_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SnapSevenConfigResponse::errordesc() const {
  // @@protoc_insertion_point(field_get:SnapSevenConfigResponse.errorDesc)
  return _internal_errordesc();
}
inline void SnapSevenConfigResponse::set_errordesc(const std::string& value) {
  _internal_set_errordesc(value);
  // @@protoc_insertion_point(field_set:SnapSevenConfigResponse.errorDesc)
}
inline std::string* SnapSevenConfigResponse::mutable_errordesc() {
  // @@protoc_insertion_point(field_mutable:SnapSevenConfigResponse.errorDesc)
  return _internal_mutable_errordesc();
}
inline const std::string& SnapSevenConfigResponse::_internal_errordesc() const {
  return errordesc_.GetNoArena();
}
inline void SnapSevenConfigResponse::_internal_set_errordesc(const std::string& value) {
  
  errordesc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SnapSevenConfigResponse::set_errordesc(std::string&& value) {
  
  errordesc_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SnapSevenConfigResponse.errorDesc)
}
inline void SnapSevenConfigResponse::set_errordesc(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  errordesc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SnapSevenConfigResponse.errorDesc)
}
inline void SnapSevenConfigResponse::set_errordesc(const char* value, size_t size) {
  
  errordesc_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SnapSevenConfigResponse.errorDesc)
}
inline std::string* SnapSevenConfigResponse::_internal_mutable_errordesc() {
  
  return errordesc_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SnapSevenConfigResponse::release_errordesc() {
  // @@protoc_insertion_point(field_release:SnapSevenConfigResponse.errorDesc)
  
  return errordesc_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SnapSevenConfigResponse::set_allocated_errordesc(std::string* errordesc) {
  if (errordesc != nullptr) {
    
  } else {
    
  }
  errordesc_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), errordesc);
  // @@protoc_insertion_point(field_set_allocated:SnapSevenConfigResponse.errorDesc)
}

// -------------------------------------------------------------------

// ConfigSnapSeven_PLCConfig_IoTag

// string tagName = 1;
inline void ConfigSnapSeven_PLCConfig_IoTag::clear_tagname() {
  tagname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ConfigSnapSeven_PLCConfig_IoTag::tagname() const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.IoTag.tagName)
  return _internal_tagname();
}
inline void ConfigSnapSeven_PLCConfig_IoTag::set_tagname(const std::string& value) {
  _internal_set_tagname(value);
  // @@protoc_insertion_point(field_set:ConfigSnapSeven.PLCConfig.IoTag.tagName)
}
inline std::string* ConfigSnapSeven_PLCConfig_IoTag::mutable_tagname() {
  // @@protoc_insertion_point(field_mutable:ConfigSnapSeven.PLCConfig.IoTag.tagName)
  return _internal_mutable_tagname();
}
inline const std::string& ConfigSnapSeven_PLCConfig_IoTag::_internal_tagname() const {
  return tagname_.GetNoArena();
}
inline void ConfigSnapSeven_PLCConfig_IoTag::_internal_set_tagname(const std::string& value) {
  
  tagname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ConfigSnapSeven_PLCConfig_IoTag::set_tagname(std::string&& value) {
  
  tagname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigSnapSeven.PLCConfig.IoTag.tagName)
}
inline void ConfigSnapSeven_PLCConfig_IoTag::set_tagname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tagname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigSnapSeven.PLCConfig.IoTag.tagName)
}
inline void ConfigSnapSeven_PLCConfig_IoTag::set_tagname(const char* value, size_t size) {
  
  tagname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigSnapSeven.PLCConfig.IoTag.tagName)
}
inline std::string* ConfigSnapSeven_PLCConfig_IoTag::_internal_mutable_tagname() {
  
  return tagname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ConfigSnapSeven_PLCConfig_IoTag::release_tagname() {
  // @@protoc_insertion_point(field_release:ConfigSnapSeven.PLCConfig.IoTag.tagName)
  
  return tagname_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigSnapSeven_PLCConfig_IoTag::set_allocated_tagname(std::string* tagname) {
  if (tagname != nullptr) {
    
  } else {
    
  }
  tagname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tagname);
  // @@protoc_insertion_point(field_set_allocated:ConfigSnapSeven.PLCConfig.IoTag.tagName)
}

// string tagId = 2;
inline void ConfigSnapSeven_PLCConfig_IoTag::clear_tagid() {
  tagid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ConfigSnapSeven_PLCConfig_IoTag::tagid() const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.IoTag.tagId)
  return _internal_tagid();
}
inline void ConfigSnapSeven_PLCConfig_IoTag::set_tagid(const std::string& value) {
  _internal_set_tagid(value);
  // @@protoc_insertion_point(field_set:ConfigSnapSeven.PLCConfig.IoTag.tagId)
}
inline std::string* ConfigSnapSeven_PLCConfig_IoTag::mutable_tagid() {
  // @@protoc_insertion_point(field_mutable:ConfigSnapSeven.PLCConfig.IoTag.tagId)
  return _internal_mutable_tagid();
}
inline const std::string& ConfigSnapSeven_PLCConfig_IoTag::_internal_tagid() const {
  return tagid_.GetNoArena();
}
inline void ConfigSnapSeven_PLCConfig_IoTag::_internal_set_tagid(const std::string& value) {
  
  tagid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ConfigSnapSeven_PLCConfig_IoTag::set_tagid(std::string&& value) {
  
  tagid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigSnapSeven.PLCConfig.IoTag.tagId)
}
inline void ConfigSnapSeven_PLCConfig_IoTag::set_tagid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tagid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigSnapSeven.PLCConfig.IoTag.tagId)
}
inline void ConfigSnapSeven_PLCConfig_IoTag::set_tagid(const char* value, size_t size) {
  
  tagid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigSnapSeven.PLCConfig.IoTag.tagId)
}
inline std::string* ConfigSnapSeven_PLCConfig_IoTag::_internal_mutable_tagid() {
  
  return tagid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ConfigSnapSeven_PLCConfig_IoTag::release_tagid() {
  // @@protoc_insertion_point(field_release:ConfigSnapSeven.PLCConfig.IoTag.tagId)
  
  return tagid_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigSnapSeven_PLCConfig_IoTag::set_allocated_tagid(std::string* tagid) {
  if (tagid != nullptr) {
    
  } else {
    
  }
  tagid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tagid);
  // @@protoc_insertion_point(field_set_allocated:ConfigSnapSeven.PLCConfig.IoTag.tagId)
}

// string tagType = 3;
inline void ConfigSnapSeven_PLCConfig_IoTag::clear_tagtype() {
  tagtype_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ConfigSnapSeven_PLCConfig_IoTag::tagtype() const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.IoTag.tagType)
  return _internal_tagtype();
}
inline void ConfigSnapSeven_PLCConfig_IoTag::set_tagtype(const std::string& value) {
  _internal_set_tagtype(value);
  // @@protoc_insertion_point(field_set:ConfigSnapSeven.PLCConfig.IoTag.tagType)
}
inline std::string* ConfigSnapSeven_PLCConfig_IoTag::mutable_tagtype() {
  // @@protoc_insertion_point(field_mutable:ConfigSnapSeven.PLCConfig.IoTag.tagType)
  return _internal_mutable_tagtype();
}
inline const std::string& ConfigSnapSeven_PLCConfig_IoTag::_internal_tagtype() const {
  return tagtype_.GetNoArena();
}
inline void ConfigSnapSeven_PLCConfig_IoTag::_internal_set_tagtype(const std::string& value) {
  
  tagtype_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ConfigSnapSeven_PLCConfig_IoTag::set_tagtype(std::string&& value) {
  
  tagtype_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigSnapSeven.PLCConfig.IoTag.tagType)
}
inline void ConfigSnapSeven_PLCConfig_IoTag::set_tagtype(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tagtype_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigSnapSeven.PLCConfig.IoTag.tagType)
}
inline void ConfigSnapSeven_PLCConfig_IoTag::set_tagtype(const char* value, size_t size) {
  
  tagtype_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigSnapSeven.PLCConfig.IoTag.tagType)
}
inline std::string* ConfigSnapSeven_PLCConfig_IoTag::_internal_mutable_tagtype() {
  
  return tagtype_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ConfigSnapSeven_PLCConfig_IoTag::release_tagtype() {
  // @@protoc_insertion_point(field_release:ConfigSnapSeven.PLCConfig.IoTag.tagType)
  
  return tagtype_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigSnapSeven_PLCConfig_IoTag::set_allocated_tagtype(std::string* tagtype) {
  if (tagtype != nullptr) {
    
  } else {
    
  }
  tagtype_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tagtype);
  // @@protoc_insertion_point(field_set_allocated:ConfigSnapSeven.PLCConfig.IoTag.tagType)
}

// string ioType = 4;
inline void ConfigSnapSeven_PLCConfig_IoTag::clear_iotype() {
  iotype_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ConfigSnapSeven_PLCConfig_IoTag::iotype() const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.IoTag.ioType)
  return _internal_iotype();
}
inline void ConfigSnapSeven_PLCConfig_IoTag::set_iotype(const std::string& value) {
  _internal_set_iotype(value);
  // @@protoc_insertion_point(field_set:ConfigSnapSeven.PLCConfig.IoTag.ioType)
}
inline std::string* ConfigSnapSeven_PLCConfig_IoTag::mutable_iotype() {
  // @@protoc_insertion_point(field_mutable:ConfigSnapSeven.PLCConfig.IoTag.ioType)
  return _internal_mutable_iotype();
}
inline const std::string& ConfigSnapSeven_PLCConfig_IoTag::_internal_iotype() const {
  return iotype_.GetNoArena();
}
inline void ConfigSnapSeven_PLCConfig_IoTag::_internal_set_iotype(const std::string& value) {
  
  iotype_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ConfigSnapSeven_PLCConfig_IoTag::set_iotype(std::string&& value) {
  
  iotype_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigSnapSeven.PLCConfig.IoTag.ioType)
}
inline void ConfigSnapSeven_PLCConfig_IoTag::set_iotype(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  iotype_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigSnapSeven.PLCConfig.IoTag.ioType)
}
inline void ConfigSnapSeven_PLCConfig_IoTag::set_iotype(const char* value, size_t size) {
  
  iotype_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigSnapSeven.PLCConfig.IoTag.ioType)
}
inline std::string* ConfigSnapSeven_PLCConfig_IoTag::_internal_mutable_iotype() {
  
  return iotype_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ConfigSnapSeven_PLCConfig_IoTag::release_iotype() {
  // @@protoc_insertion_point(field_release:ConfigSnapSeven.PLCConfig.IoTag.ioType)
  
  return iotype_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigSnapSeven_PLCConfig_IoTag::set_allocated_iotype(std::string* iotype) {
  if (iotype != nullptr) {
    
  } else {
    
  }
  iotype_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), iotype);
  // @@protoc_insertion_point(field_set_allocated:ConfigSnapSeven.PLCConfig.IoTag.ioType)
}

// int32 wordCount = 5;
inline void ConfigSnapSeven_PLCConfig_IoTag::clear_wordcount() {
  wordcount_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConfigSnapSeven_PLCConfig_IoTag::_internal_wordcount() const {
  return wordcount_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConfigSnapSeven_PLCConfig_IoTag::wordcount() const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.IoTag.wordCount)
  return _internal_wordcount();
}
inline void ConfigSnapSeven_PLCConfig_IoTag::_internal_set_wordcount(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  wordcount_ = value;
}
inline void ConfigSnapSeven_PLCConfig_IoTag::set_wordcount(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_wordcount(value);
  // @@protoc_insertion_point(field_set:ConfigSnapSeven.PLCConfig.IoTag.wordCount)
}

// int32 bitCount = 6;
inline void ConfigSnapSeven_PLCConfig_IoTag::clear_bitcount() {
  bitcount_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConfigSnapSeven_PLCConfig_IoTag::_internal_bitcount() const {
  return bitcount_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConfigSnapSeven_PLCConfig_IoTag::bitcount() const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.IoTag.bitCount)
  return _internal_bitcount();
}
inline void ConfigSnapSeven_PLCConfig_IoTag::_internal_set_bitcount(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  bitcount_ = value;
}
inline void ConfigSnapSeven_PLCConfig_IoTag::set_bitcount(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_bitcount(value);
  // @@protoc_insertion_point(field_set:ConfigSnapSeven.PLCConfig.IoTag.bitCount)
}

// int32 byteCount = 7;
inline void ConfigSnapSeven_PLCConfig_IoTag::clear_bytecount() {
  bytecount_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConfigSnapSeven_PLCConfig_IoTag::_internal_bytecount() const {
  return bytecount_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConfigSnapSeven_PLCConfig_IoTag::bytecount() const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.IoTag.byteCount)
  return _internal_bytecount();
}
inline void ConfigSnapSeven_PLCConfig_IoTag::_internal_set_bytecount(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  bytecount_ = value;
}
inline void ConfigSnapSeven_PLCConfig_IoTag::set_bytecount(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_bytecount(value);
  // @@protoc_insertion_point(field_set:ConfigSnapSeven.PLCConfig.IoTag.byteCount)
}

// int32 interval = 8;
inline void ConfigSnapSeven_PLCConfig_IoTag::clear_interval() {
  interval_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConfigSnapSeven_PLCConfig_IoTag::_internal_interval() const {
  return interval_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConfigSnapSeven_PLCConfig_IoTag::interval() const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.IoTag.interval)
  return _internal_interval();
}
inline void ConfigSnapSeven_PLCConfig_IoTag::_internal_set_interval(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  interval_ = value;
}
inline void ConfigSnapSeven_PLCConfig_IoTag::set_interval(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_interval(value);
  // @@protoc_insertion_point(field_set:ConfigSnapSeven.PLCConfig.IoTag.interval)
}

// bool operation = 9;
inline void ConfigSnapSeven_PLCConfig_IoTag::clear_operation() {
  operation_ = false;
}
inline bool ConfigSnapSeven_PLCConfig_IoTag::_internal_operation() const {
  return operation_;
}
inline bool ConfigSnapSeven_PLCConfig_IoTag::operation() const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.IoTag.operation)
  return _internal_operation();
}
inline void ConfigSnapSeven_PLCConfig_IoTag::_internal_set_operation(bool value) {
  
  operation_ = value;
}
inline void ConfigSnapSeven_PLCConfig_IoTag::set_operation(bool value) {
  _internal_set_operation(value);
  // @@protoc_insertion_point(field_set:ConfigSnapSeven.PLCConfig.IoTag.operation)
}

// -------------------------------------------------------------------

// ConfigSnapSeven_PLCConfig_DataBlockTag

// string tagName = 1;
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::clear_tagname() {
  tagname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ConfigSnapSeven_PLCConfig_DataBlockTag::tagname() const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.DataBlockTag.tagName)
  return _internal_tagname();
}
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::set_tagname(const std::string& value) {
  _internal_set_tagname(value);
  // @@protoc_insertion_point(field_set:ConfigSnapSeven.PLCConfig.DataBlockTag.tagName)
}
inline std::string* ConfigSnapSeven_PLCConfig_DataBlockTag::mutable_tagname() {
  // @@protoc_insertion_point(field_mutable:ConfigSnapSeven.PLCConfig.DataBlockTag.tagName)
  return _internal_mutable_tagname();
}
inline const std::string& ConfigSnapSeven_PLCConfig_DataBlockTag::_internal_tagname() const {
  return tagname_.GetNoArena();
}
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::_internal_set_tagname(const std::string& value) {
  
  tagname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::set_tagname(std::string&& value) {
  
  tagname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigSnapSeven.PLCConfig.DataBlockTag.tagName)
}
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::set_tagname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tagname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigSnapSeven.PLCConfig.DataBlockTag.tagName)
}
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::set_tagname(const char* value, size_t size) {
  
  tagname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigSnapSeven.PLCConfig.DataBlockTag.tagName)
}
inline std::string* ConfigSnapSeven_PLCConfig_DataBlockTag::_internal_mutable_tagname() {
  
  return tagname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ConfigSnapSeven_PLCConfig_DataBlockTag::release_tagname() {
  // @@protoc_insertion_point(field_release:ConfigSnapSeven.PLCConfig.DataBlockTag.tagName)
  
  return tagname_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::set_allocated_tagname(std::string* tagname) {
  if (tagname != nullptr) {
    
  } else {
    
  }
  tagname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tagname);
  // @@protoc_insertion_point(field_set_allocated:ConfigSnapSeven.PLCConfig.DataBlockTag.tagName)
}

// string tagId = 2;
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::clear_tagid() {
  tagid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ConfigSnapSeven_PLCConfig_DataBlockTag::tagid() const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.DataBlockTag.tagId)
  return _internal_tagid();
}
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::set_tagid(const std::string& value) {
  _internal_set_tagid(value);
  // @@protoc_insertion_point(field_set:ConfigSnapSeven.PLCConfig.DataBlockTag.tagId)
}
inline std::string* ConfigSnapSeven_PLCConfig_DataBlockTag::mutable_tagid() {
  // @@protoc_insertion_point(field_mutable:ConfigSnapSeven.PLCConfig.DataBlockTag.tagId)
  return _internal_mutable_tagid();
}
inline const std::string& ConfigSnapSeven_PLCConfig_DataBlockTag::_internal_tagid() const {
  return tagid_.GetNoArena();
}
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::_internal_set_tagid(const std::string& value) {
  
  tagid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::set_tagid(std::string&& value) {
  
  tagid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigSnapSeven.PLCConfig.DataBlockTag.tagId)
}
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::set_tagid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tagid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigSnapSeven.PLCConfig.DataBlockTag.tagId)
}
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::set_tagid(const char* value, size_t size) {
  
  tagid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigSnapSeven.PLCConfig.DataBlockTag.tagId)
}
inline std::string* ConfigSnapSeven_PLCConfig_DataBlockTag::_internal_mutable_tagid() {
  
  return tagid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ConfigSnapSeven_PLCConfig_DataBlockTag::release_tagid() {
  // @@protoc_insertion_point(field_release:ConfigSnapSeven.PLCConfig.DataBlockTag.tagId)
  
  return tagid_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::set_allocated_tagid(std::string* tagid) {
  if (tagid != nullptr) {
    
  } else {
    
  }
  tagid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tagid);
  // @@protoc_insertion_point(field_set_allocated:ConfigSnapSeven.PLCConfig.DataBlockTag.tagId)
}

// string functionCode = 3;
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::clear_functioncode() {
  functioncode_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ConfigSnapSeven_PLCConfig_DataBlockTag::functioncode() const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.DataBlockTag.functionCode)
  return _internal_functioncode();
}
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::set_functioncode(const std::string& value) {
  _internal_set_functioncode(value);
  // @@protoc_insertion_point(field_set:ConfigSnapSeven.PLCConfig.DataBlockTag.functionCode)
}
inline std::string* ConfigSnapSeven_PLCConfig_DataBlockTag::mutable_functioncode() {
  // @@protoc_insertion_point(field_mutable:ConfigSnapSeven.PLCConfig.DataBlockTag.functionCode)
  return _internal_mutable_functioncode();
}
inline const std::string& ConfigSnapSeven_PLCConfig_DataBlockTag::_internal_functioncode() const {
  return functioncode_.GetNoArena();
}
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::_internal_set_functioncode(const std::string& value) {
  
  functioncode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::set_functioncode(std::string&& value) {
  
  functioncode_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigSnapSeven.PLCConfig.DataBlockTag.functionCode)
}
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::set_functioncode(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  functioncode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigSnapSeven.PLCConfig.DataBlockTag.functionCode)
}
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::set_functioncode(const char* value, size_t size) {
  
  functioncode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigSnapSeven.PLCConfig.DataBlockTag.functionCode)
}
inline std::string* ConfigSnapSeven_PLCConfig_DataBlockTag::_internal_mutable_functioncode() {
  
  return functioncode_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ConfigSnapSeven_PLCConfig_DataBlockTag::release_functioncode() {
  // @@protoc_insertion_point(field_release:ConfigSnapSeven.PLCConfig.DataBlockTag.functionCode)
  
  return functioncode_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::set_allocated_functioncode(std::string* functioncode) {
  if (functioncode != nullptr) {
    
  } else {
    
  }
  functioncode_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), functioncode);
  // @@protoc_insertion_point(field_set_allocated:ConfigSnapSeven.PLCConfig.DataBlockTag.functionCode)
}

// int32 count = 4;
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::clear_count() {
  count_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConfigSnapSeven_PLCConfig_DataBlockTag::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConfigSnapSeven_PLCConfig_DataBlockTag::count() const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.DataBlockTag.count)
  return _internal_count();
}
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::_internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  count_ = value;
}
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:ConfigSnapSeven.PLCConfig.DataBlockTag.count)
}

// .ParameterDataType parameter = 5;
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::clear_parameter() {
  parameter_ = 0;
}
inline ::ParameterDataType ConfigSnapSeven_PLCConfig_DataBlockTag::_internal_parameter() const {
  return static_cast< ::ParameterDataType >(parameter_);
}
inline ::ParameterDataType ConfigSnapSeven_PLCConfig_DataBlockTag::parameter() const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.DataBlockTag.parameter)
  return _internal_parameter();
}
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::_internal_set_parameter(::ParameterDataType value) {
  
  parameter_ = value;
}
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::set_parameter(::ParameterDataType value) {
  _internal_set_parameter(value);
  // @@protoc_insertion_point(field_set:ConfigSnapSeven.PLCConfig.DataBlockTag.parameter)
}

// int32 startAddress = 6;
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::clear_startaddress() {
  startaddress_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConfigSnapSeven_PLCConfig_DataBlockTag::_internal_startaddress() const {
  return startaddress_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConfigSnapSeven_PLCConfig_DataBlockTag::startaddress() const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.DataBlockTag.startAddress)
  return _internal_startaddress();
}
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::_internal_set_startaddress(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  startaddress_ = value;
}
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::set_startaddress(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_startaddress(value);
  // @@protoc_insertion_point(field_set:ConfigSnapSeven.PLCConfig.DataBlockTag.startAddress)
}

// int32 bitNumber = 7;
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::clear_bitnumber() {
  bitnumber_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConfigSnapSeven_PLCConfig_DataBlockTag::_internal_bitnumber() const {
  return bitnumber_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConfigSnapSeven_PLCConfig_DataBlockTag::bitnumber() const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.DataBlockTag.bitNumber)
  return _internal_bitnumber();
}
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::_internal_set_bitnumber(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  bitnumber_ = value;
}
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::set_bitnumber(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_bitnumber(value);
  // @@protoc_insertion_point(field_set:ConfigSnapSeven.PLCConfig.DataBlockTag.bitNumber)
}

// int32 dbNumber = 8;
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::clear_dbnumber() {
  dbnumber_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConfigSnapSeven_PLCConfig_DataBlockTag::_internal_dbnumber() const {
  return dbnumber_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConfigSnapSeven_PLCConfig_DataBlockTag::dbnumber() const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.DataBlockTag.dbNumber)
  return _internal_dbnumber();
}
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::_internal_set_dbnumber(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  dbnumber_ = value;
}
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::set_dbnumber(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_dbnumber(value);
  // @@protoc_insertion_point(field_set:ConfigSnapSeven.PLCConfig.DataBlockTag.dbNumber)
}

// int32 interval = 9;
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::clear_interval() {
  interval_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConfigSnapSeven_PLCConfig_DataBlockTag::_internal_interval() const {
  return interval_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConfigSnapSeven_PLCConfig_DataBlockTag::interval() const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.DataBlockTag.interval)
  return _internal_interval();
}
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::_internal_set_interval(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  interval_ = value;
}
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::set_interval(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_interval(value);
  // @@protoc_insertion_point(field_set:ConfigSnapSeven.PLCConfig.DataBlockTag.interval)
}

// bool operation = 10;
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::clear_operation() {
  operation_ = false;
}
inline bool ConfigSnapSeven_PLCConfig_DataBlockTag::_internal_operation() const {
  return operation_;
}
inline bool ConfigSnapSeven_PLCConfig_DataBlockTag::operation() const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.DataBlockTag.operation)
  return _internal_operation();
}
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::_internal_set_operation(bool value) {
  
  operation_ = value;
}
inline void ConfigSnapSeven_PLCConfig_DataBlockTag::set_operation(bool value) {
  _internal_set_operation(value);
  // @@protoc_insertion_point(field_set:ConfigSnapSeven.PLCConfig.DataBlockTag.operation)
}

// -------------------------------------------------------------------

// ConfigSnapSeven_PLCConfig_MemoryTag

// string tagName = 1;
inline void ConfigSnapSeven_PLCConfig_MemoryTag::clear_tagname() {
  tagname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ConfigSnapSeven_PLCConfig_MemoryTag::tagname() const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.MemoryTag.tagName)
  return _internal_tagname();
}
inline void ConfigSnapSeven_PLCConfig_MemoryTag::set_tagname(const std::string& value) {
  _internal_set_tagname(value);
  // @@protoc_insertion_point(field_set:ConfigSnapSeven.PLCConfig.MemoryTag.tagName)
}
inline std::string* ConfigSnapSeven_PLCConfig_MemoryTag::mutable_tagname() {
  // @@protoc_insertion_point(field_mutable:ConfigSnapSeven.PLCConfig.MemoryTag.tagName)
  return _internal_mutable_tagname();
}
inline const std::string& ConfigSnapSeven_PLCConfig_MemoryTag::_internal_tagname() const {
  return tagname_.GetNoArena();
}
inline void ConfigSnapSeven_PLCConfig_MemoryTag::_internal_set_tagname(const std::string& value) {
  
  tagname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ConfigSnapSeven_PLCConfig_MemoryTag::set_tagname(std::string&& value) {
  
  tagname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigSnapSeven.PLCConfig.MemoryTag.tagName)
}
inline void ConfigSnapSeven_PLCConfig_MemoryTag::set_tagname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tagname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigSnapSeven.PLCConfig.MemoryTag.tagName)
}
inline void ConfigSnapSeven_PLCConfig_MemoryTag::set_tagname(const char* value, size_t size) {
  
  tagname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigSnapSeven.PLCConfig.MemoryTag.tagName)
}
inline std::string* ConfigSnapSeven_PLCConfig_MemoryTag::_internal_mutable_tagname() {
  
  return tagname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ConfigSnapSeven_PLCConfig_MemoryTag::release_tagname() {
  // @@protoc_insertion_point(field_release:ConfigSnapSeven.PLCConfig.MemoryTag.tagName)
  
  return tagname_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigSnapSeven_PLCConfig_MemoryTag::set_allocated_tagname(std::string* tagname) {
  if (tagname != nullptr) {
    
  } else {
    
  }
  tagname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tagname);
  // @@protoc_insertion_point(field_set_allocated:ConfigSnapSeven.PLCConfig.MemoryTag.tagName)
}

// string tagId = 2;
inline void ConfigSnapSeven_PLCConfig_MemoryTag::clear_tagid() {
  tagid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ConfigSnapSeven_PLCConfig_MemoryTag::tagid() const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.MemoryTag.tagId)
  return _internal_tagid();
}
inline void ConfigSnapSeven_PLCConfig_MemoryTag::set_tagid(const std::string& value) {
  _internal_set_tagid(value);
  // @@protoc_insertion_point(field_set:ConfigSnapSeven.PLCConfig.MemoryTag.tagId)
}
inline std::string* ConfigSnapSeven_PLCConfig_MemoryTag::mutable_tagid() {
  // @@protoc_insertion_point(field_mutable:ConfigSnapSeven.PLCConfig.MemoryTag.tagId)
  return _internal_mutable_tagid();
}
inline const std::string& ConfigSnapSeven_PLCConfig_MemoryTag::_internal_tagid() const {
  return tagid_.GetNoArena();
}
inline void ConfigSnapSeven_PLCConfig_MemoryTag::_internal_set_tagid(const std::string& value) {
  
  tagid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ConfigSnapSeven_PLCConfig_MemoryTag::set_tagid(std::string&& value) {
  
  tagid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigSnapSeven.PLCConfig.MemoryTag.tagId)
}
inline void ConfigSnapSeven_PLCConfig_MemoryTag::set_tagid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tagid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigSnapSeven.PLCConfig.MemoryTag.tagId)
}
inline void ConfigSnapSeven_PLCConfig_MemoryTag::set_tagid(const char* value, size_t size) {
  
  tagid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigSnapSeven.PLCConfig.MemoryTag.tagId)
}
inline std::string* ConfigSnapSeven_PLCConfig_MemoryTag::_internal_mutable_tagid() {
  
  return tagid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ConfigSnapSeven_PLCConfig_MemoryTag::release_tagid() {
  // @@protoc_insertion_point(field_release:ConfigSnapSeven.PLCConfig.MemoryTag.tagId)
  
  return tagid_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigSnapSeven_PLCConfig_MemoryTag::set_allocated_tagid(std::string* tagid) {
  if (tagid != nullptr) {
    
  } else {
    
  }
  tagid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tagid);
  // @@protoc_insertion_point(field_set_allocated:ConfigSnapSeven.PLCConfig.MemoryTag.tagId)
}

// string functionCode = 3;
inline void ConfigSnapSeven_PLCConfig_MemoryTag::clear_functioncode() {
  functioncode_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ConfigSnapSeven_PLCConfig_MemoryTag::functioncode() const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.MemoryTag.functionCode)
  return _internal_functioncode();
}
inline void ConfigSnapSeven_PLCConfig_MemoryTag::set_functioncode(const std::string& value) {
  _internal_set_functioncode(value);
  // @@protoc_insertion_point(field_set:ConfigSnapSeven.PLCConfig.MemoryTag.functionCode)
}
inline std::string* ConfigSnapSeven_PLCConfig_MemoryTag::mutable_functioncode() {
  // @@protoc_insertion_point(field_mutable:ConfigSnapSeven.PLCConfig.MemoryTag.functionCode)
  return _internal_mutable_functioncode();
}
inline const std::string& ConfigSnapSeven_PLCConfig_MemoryTag::_internal_functioncode() const {
  return functioncode_.GetNoArena();
}
inline void ConfigSnapSeven_PLCConfig_MemoryTag::_internal_set_functioncode(const std::string& value) {
  
  functioncode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ConfigSnapSeven_PLCConfig_MemoryTag::set_functioncode(std::string&& value) {
  
  functioncode_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigSnapSeven.PLCConfig.MemoryTag.functionCode)
}
inline void ConfigSnapSeven_PLCConfig_MemoryTag::set_functioncode(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  functioncode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigSnapSeven.PLCConfig.MemoryTag.functionCode)
}
inline void ConfigSnapSeven_PLCConfig_MemoryTag::set_functioncode(const char* value, size_t size) {
  
  functioncode_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigSnapSeven.PLCConfig.MemoryTag.functionCode)
}
inline std::string* ConfigSnapSeven_PLCConfig_MemoryTag::_internal_mutable_functioncode() {
  
  return functioncode_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ConfigSnapSeven_PLCConfig_MemoryTag::release_functioncode() {
  // @@protoc_insertion_point(field_release:ConfigSnapSeven.PLCConfig.MemoryTag.functionCode)
  
  return functioncode_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigSnapSeven_PLCConfig_MemoryTag::set_allocated_functioncode(std::string* functioncode) {
  if (functioncode != nullptr) {
    
  } else {
    
  }
  functioncode_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), functioncode);
  // @@protoc_insertion_point(field_set_allocated:ConfigSnapSeven.PLCConfig.MemoryTag.functionCode)
}

// int32 startAddress = 4;
inline void ConfigSnapSeven_PLCConfig_MemoryTag::clear_startaddress() {
  startaddress_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConfigSnapSeven_PLCConfig_MemoryTag::_internal_startaddress() const {
  return startaddress_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConfigSnapSeven_PLCConfig_MemoryTag::startaddress() const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.MemoryTag.startAddress)
  return _internal_startaddress();
}
inline void ConfigSnapSeven_PLCConfig_MemoryTag::_internal_set_startaddress(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  startaddress_ = value;
}
inline void ConfigSnapSeven_PLCConfig_MemoryTag::set_startaddress(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_startaddress(value);
  // @@protoc_insertion_point(field_set:ConfigSnapSeven.PLCConfig.MemoryTag.startAddress)
}

// int32 varSize = 5;
inline void ConfigSnapSeven_PLCConfig_MemoryTag::clear_varsize() {
  varsize_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConfigSnapSeven_PLCConfig_MemoryTag::_internal_varsize() const {
  return varsize_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConfigSnapSeven_PLCConfig_MemoryTag::varsize() const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.MemoryTag.varSize)
  return _internal_varsize();
}
inline void ConfigSnapSeven_PLCConfig_MemoryTag::_internal_set_varsize(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  varsize_ = value;
}
inline void ConfigSnapSeven_PLCConfig_MemoryTag::set_varsize(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_varsize(value);
  // @@protoc_insertion_point(field_set:ConfigSnapSeven.PLCConfig.MemoryTag.varSize)
}

// int32 interval = 6;
inline void ConfigSnapSeven_PLCConfig_MemoryTag::clear_interval() {
  interval_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConfigSnapSeven_PLCConfig_MemoryTag::_internal_interval() const {
  return interval_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConfigSnapSeven_PLCConfig_MemoryTag::interval() const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.MemoryTag.interval)
  return _internal_interval();
}
inline void ConfigSnapSeven_PLCConfig_MemoryTag::_internal_set_interval(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  interval_ = value;
}
inline void ConfigSnapSeven_PLCConfig_MemoryTag::set_interval(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_interval(value);
  // @@protoc_insertion_point(field_set:ConfigSnapSeven.PLCConfig.MemoryTag.interval)
}

// bool operation = 7;
inline void ConfigSnapSeven_PLCConfig_MemoryTag::clear_operation() {
  operation_ = false;
}
inline bool ConfigSnapSeven_PLCConfig_MemoryTag::_internal_operation() const {
  return operation_;
}
inline bool ConfigSnapSeven_PLCConfig_MemoryTag::operation() const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.MemoryTag.operation)
  return _internal_operation();
}
inline void ConfigSnapSeven_PLCConfig_MemoryTag::_internal_set_operation(bool value) {
  
  operation_ = value;
}
inline void ConfigSnapSeven_PLCConfig_MemoryTag::set_operation(bool value) {
  _internal_set_operation(value);
  // @@protoc_insertion_point(field_set:ConfigSnapSeven.PLCConfig.MemoryTag.operation)
}

// -------------------------------------------------------------------

// ConfigSnapSeven_PLCConfig

// string plcName = 1;
inline void ConfigSnapSeven_PLCConfig::clear_plcname() {
  plcname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ConfigSnapSeven_PLCConfig::plcname() const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.plcName)
  return _internal_plcname();
}
inline void ConfigSnapSeven_PLCConfig::set_plcname(const std::string& value) {
  _internal_set_plcname(value);
  // @@protoc_insertion_point(field_set:ConfigSnapSeven.PLCConfig.plcName)
}
inline std::string* ConfigSnapSeven_PLCConfig::mutable_plcname() {
  // @@protoc_insertion_point(field_mutable:ConfigSnapSeven.PLCConfig.plcName)
  return _internal_mutable_plcname();
}
inline const std::string& ConfigSnapSeven_PLCConfig::_internal_plcname() const {
  return plcname_.GetNoArena();
}
inline void ConfigSnapSeven_PLCConfig::_internal_set_plcname(const std::string& value) {
  
  plcname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ConfigSnapSeven_PLCConfig::set_plcname(std::string&& value) {
  
  plcname_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigSnapSeven.PLCConfig.plcName)
}
inline void ConfigSnapSeven_PLCConfig::set_plcname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  plcname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigSnapSeven.PLCConfig.plcName)
}
inline void ConfigSnapSeven_PLCConfig::set_plcname(const char* value, size_t size) {
  
  plcname_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigSnapSeven.PLCConfig.plcName)
}
inline std::string* ConfigSnapSeven_PLCConfig::_internal_mutable_plcname() {
  
  return plcname_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ConfigSnapSeven_PLCConfig::release_plcname() {
  // @@protoc_insertion_point(field_release:ConfigSnapSeven.PLCConfig.plcName)
  
  return plcname_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigSnapSeven_PLCConfig::set_allocated_plcname(std::string* plcname) {
  if (plcname != nullptr) {
    
  } else {
    
  }
  plcname_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), plcname);
  // @@protoc_insertion_point(field_set_allocated:ConfigSnapSeven.PLCConfig.plcName)
}

// string plcID = 2;
inline void ConfigSnapSeven_PLCConfig::clear_plcid() {
  plcid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ConfigSnapSeven_PLCConfig::plcid() const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.plcID)
  return _internal_plcid();
}
inline void ConfigSnapSeven_PLCConfig::set_plcid(const std::string& value) {
  _internal_set_plcid(value);
  // @@protoc_insertion_point(field_set:ConfigSnapSeven.PLCConfig.plcID)
}
inline std::string* ConfigSnapSeven_PLCConfig::mutable_plcid() {
  // @@protoc_insertion_point(field_mutable:ConfigSnapSeven.PLCConfig.plcID)
  return _internal_mutable_plcid();
}
inline const std::string& ConfigSnapSeven_PLCConfig::_internal_plcid() const {
  return plcid_.GetNoArena();
}
inline void ConfigSnapSeven_PLCConfig::_internal_set_plcid(const std::string& value) {
  
  plcid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ConfigSnapSeven_PLCConfig::set_plcid(std::string&& value) {
  
  plcid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigSnapSeven.PLCConfig.plcID)
}
inline void ConfigSnapSeven_PLCConfig::set_plcid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  plcid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigSnapSeven.PLCConfig.plcID)
}
inline void ConfigSnapSeven_PLCConfig::set_plcid(const char* value, size_t size) {
  
  plcid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigSnapSeven.PLCConfig.plcID)
}
inline std::string* ConfigSnapSeven_PLCConfig::_internal_mutable_plcid() {
  
  return plcid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ConfigSnapSeven_PLCConfig::release_plcid() {
  // @@protoc_insertion_point(field_release:ConfigSnapSeven.PLCConfig.plcID)
  
  return plcid_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigSnapSeven_PLCConfig::set_allocated_plcid(std::string* plcid) {
  if (plcid != nullptr) {
    
  } else {
    
  }
  plcid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), plcid);
  // @@protoc_insertion_point(field_set_allocated:ConfigSnapSeven.PLCConfig.plcID)
}

// string plcAddress = 3;
inline void ConfigSnapSeven_PLCConfig::clear_plcaddress() {
  plcaddress_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ConfigSnapSeven_PLCConfig::plcaddress() const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.plcAddress)
  return _internal_plcaddress();
}
inline void ConfigSnapSeven_PLCConfig::set_plcaddress(const std::string& value) {
  _internal_set_plcaddress(value);
  // @@protoc_insertion_point(field_set:ConfigSnapSeven.PLCConfig.plcAddress)
}
inline std::string* ConfigSnapSeven_PLCConfig::mutable_plcaddress() {
  // @@protoc_insertion_point(field_mutable:ConfigSnapSeven.PLCConfig.plcAddress)
  return _internal_mutable_plcaddress();
}
inline const std::string& ConfigSnapSeven_PLCConfig::_internal_plcaddress() const {
  return plcaddress_.GetNoArena();
}
inline void ConfigSnapSeven_PLCConfig::_internal_set_plcaddress(const std::string& value) {
  
  plcaddress_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ConfigSnapSeven_PLCConfig::set_plcaddress(std::string&& value) {
  
  plcaddress_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigSnapSeven.PLCConfig.plcAddress)
}
inline void ConfigSnapSeven_PLCConfig::set_plcaddress(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  plcaddress_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigSnapSeven.PLCConfig.plcAddress)
}
inline void ConfigSnapSeven_PLCConfig::set_plcaddress(const char* value, size_t size) {
  
  plcaddress_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigSnapSeven.PLCConfig.plcAddress)
}
inline std::string* ConfigSnapSeven_PLCConfig::_internal_mutable_plcaddress() {
  
  return plcaddress_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ConfigSnapSeven_PLCConfig::release_plcaddress() {
  // @@protoc_insertion_point(field_release:ConfigSnapSeven.PLCConfig.plcAddress)
  
  return plcaddress_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigSnapSeven_PLCConfig::set_allocated_plcaddress(std::string* plcaddress) {
  if (plcaddress != nullptr) {
    
  } else {
    
  }
  plcaddress_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), plcaddress);
  // @@protoc_insertion_point(field_set_allocated:ConfigSnapSeven.PLCConfig.plcAddress)
}

// int32 plcPort = 4;
inline void ConfigSnapSeven_PLCConfig::clear_plcport() {
  plcport_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConfigSnapSeven_PLCConfig::_internal_plcport() const {
  return plcport_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConfigSnapSeven_PLCConfig::plcport() const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.plcPort)
  return _internal_plcport();
}
inline void ConfigSnapSeven_PLCConfig::_internal_set_plcport(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  plcport_ = value;
}
inline void ConfigSnapSeven_PLCConfig::set_plcport(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_plcport(value);
  // @@protoc_insertion_point(field_set:ConfigSnapSeven.PLCConfig.plcPort)
}

// string plcIp = 5;
inline void ConfigSnapSeven_PLCConfig::clear_plcip() {
  plcip_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ConfigSnapSeven_PLCConfig::plcip() const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.plcIp)
  return _internal_plcip();
}
inline void ConfigSnapSeven_PLCConfig::set_plcip(const std::string& value) {
  _internal_set_plcip(value);
  // @@protoc_insertion_point(field_set:ConfigSnapSeven.PLCConfig.plcIp)
}
inline std::string* ConfigSnapSeven_PLCConfig::mutable_plcip() {
  // @@protoc_insertion_point(field_mutable:ConfigSnapSeven.PLCConfig.plcIp)
  return _internal_mutable_plcip();
}
inline const std::string& ConfigSnapSeven_PLCConfig::_internal_plcip() const {
  return plcip_.GetNoArena();
}
inline void ConfigSnapSeven_PLCConfig::_internal_set_plcip(const std::string& value) {
  
  plcip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ConfigSnapSeven_PLCConfig::set_plcip(std::string&& value) {
  
  plcip_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigSnapSeven.PLCConfig.plcIp)
}
inline void ConfigSnapSeven_PLCConfig::set_plcip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  plcip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigSnapSeven.PLCConfig.plcIp)
}
inline void ConfigSnapSeven_PLCConfig::set_plcip(const char* value, size_t size) {
  
  plcip_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigSnapSeven.PLCConfig.plcIp)
}
inline std::string* ConfigSnapSeven_PLCConfig::_internal_mutable_plcip() {
  
  return plcip_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ConfigSnapSeven_PLCConfig::release_plcip() {
  // @@protoc_insertion_point(field_release:ConfigSnapSeven.PLCConfig.plcIp)
  
  return plcip_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigSnapSeven_PLCConfig::set_allocated_plcip(std::string* plcip) {
  if (plcip != nullptr) {
    
  } else {
    
  }
  plcip_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), plcip);
  // @@protoc_insertion_point(field_set_allocated:ConfigSnapSeven.PLCConfig.plcIp)
}

// repeated .ConfigSnapSeven.PLCConfig.IoTag iotag = 6;
inline int ConfigSnapSeven_PLCConfig::_internal_iotag_size() const {
  return iotag_.size();
}
inline int ConfigSnapSeven_PLCConfig::iotag_size() const {
  return _internal_iotag_size();
}
inline void ConfigSnapSeven_PLCConfig::clear_iotag() {
  iotag_.Clear();
}
inline ::ConfigSnapSeven_PLCConfig_IoTag* ConfigSnapSeven_PLCConfig::mutable_iotag(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigSnapSeven.PLCConfig.iotag)
  return iotag_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ConfigSnapSeven_PLCConfig_IoTag >*
ConfigSnapSeven_PLCConfig::mutable_iotag() {
  // @@protoc_insertion_point(field_mutable_list:ConfigSnapSeven.PLCConfig.iotag)
  return &iotag_;
}
inline const ::ConfigSnapSeven_PLCConfig_IoTag& ConfigSnapSeven_PLCConfig::_internal_iotag(int index) const {
  return iotag_.Get(index);
}
inline const ::ConfigSnapSeven_PLCConfig_IoTag& ConfigSnapSeven_PLCConfig::iotag(int index) const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.iotag)
  return _internal_iotag(index);
}
inline ::ConfigSnapSeven_PLCConfig_IoTag* ConfigSnapSeven_PLCConfig::_internal_add_iotag() {
  return iotag_.Add();
}
inline ::ConfigSnapSeven_PLCConfig_IoTag* ConfigSnapSeven_PLCConfig::add_iotag() {
  // @@protoc_insertion_point(field_add:ConfigSnapSeven.PLCConfig.iotag)
  return _internal_add_iotag();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ConfigSnapSeven_PLCConfig_IoTag >&
ConfigSnapSeven_PLCConfig::iotag() const {
  // @@protoc_insertion_point(field_list:ConfigSnapSeven.PLCConfig.iotag)
  return iotag_;
}

// repeated .ConfigSnapSeven.PLCConfig.DataBlockTag datablocktag = 7;
inline int ConfigSnapSeven_PLCConfig::_internal_datablocktag_size() const {
  return datablocktag_.size();
}
inline int ConfigSnapSeven_PLCConfig::datablocktag_size() const {
  return _internal_datablocktag_size();
}
inline void ConfigSnapSeven_PLCConfig::clear_datablocktag() {
  datablocktag_.Clear();
}
inline ::ConfigSnapSeven_PLCConfig_DataBlockTag* ConfigSnapSeven_PLCConfig::mutable_datablocktag(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigSnapSeven.PLCConfig.datablocktag)
  return datablocktag_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ConfigSnapSeven_PLCConfig_DataBlockTag >*
ConfigSnapSeven_PLCConfig::mutable_datablocktag() {
  // @@protoc_insertion_point(field_mutable_list:ConfigSnapSeven.PLCConfig.datablocktag)
  return &datablocktag_;
}
inline const ::ConfigSnapSeven_PLCConfig_DataBlockTag& ConfigSnapSeven_PLCConfig::_internal_datablocktag(int index) const {
  return datablocktag_.Get(index);
}
inline const ::ConfigSnapSeven_PLCConfig_DataBlockTag& ConfigSnapSeven_PLCConfig::datablocktag(int index) const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.datablocktag)
  return _internal_datablocktag(index);
}
inline ::ConfigSnapSeven_PLCConfig_DataBlockTag* ConfigSnapSeven_PLCConfig::_internal_add_datablocktag() {
  return datablocktag_.Add();
}
inline ::ConfigSnapSeven_PLCConfig_DataBlockTag* ConfigSnapSeven_PLCConfig::add_datablocktag() {
  // @@protoc_insertion_point(field_add:ConfigSnapSeven.PLCConfig.datablocktag)
  return _internal_add_datablocktag();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ConfigSnapSeven_PLCConfig_DataBlockTag >&
ConfigSnapSeven_PLCConfig::datablocktag() const {
  // @@protoc_insertion_point(field_list:ConfigSnapSeven.PLCConfig.datablocktag)
  return datablocktag_;
}

// repeated .ConfigSnapSeven.PLCConfig.MemoryTag memoryTag = 8;
inline int ConfigSnapSeven_PLCConfig::_internal_memorytag_size() const {
  return memorytag_.size();
}
inline int ConfigSnapSeven_PLCConfig::memorytag_size() const {
  return _internal_memorytag_size();
}
inline void ConfigSnapSeven_PLCConfig::clear_memorytag() {
  memorytag_.Clear();
}
inline ::ConfigSnapSeven_PLCConfig_MemoryTag* ConfigSnapSeven_PLCConfig::mutable_memorytag(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigSnapSeven.PLCConfig.memoryTag)
  return memorytag_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ConfigSnapSeven_PLCConfig_MemoryTag >*
ConfigSnapSeven_PLCConfig::mutable_memorytag() {
  // @@protoc_insertion_point(field_mutable_list:ConfigSnapSeven.PLCConfig.memoryTag)
  return &memorytag_;
}
inline const ::ConfigSnapSeven_PLCConfig_MemoryTag& ConfigSnapSeven_PLCConfig::_internal_memorytag(int index) const {
  return memorytag_.Get(index);
}
inline const ::ConfigSnapSeven_PLCConfig_MemoryTag& ConfigSnapSeven_PLCConfig::memorytag(int index) const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.PLCConfig.memoryTag)
  return _internal_memorytag(index);
}
inline ::ConfigSnapSeven_PLCConfig_MemoryTag* ConfigSnapSeven_PLCConfig::_internal_add_memorytag() {
  return memorytag_.Add();
}
inline ::ConfigSnapSeven_PLCConfig_MemoryTag* ConfigSnapSeven_PLCConfig::add_memorytag() {
  // @@protoc_insertion_point(field_add:ConfigSnapSeven.PLCConfig.memoryTag)
  return _internal_add_memorytag();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ConfigSnapSeven_PLCConfig_MemoryTag >&
ConfigSnapSeven_PLCConfig::memorytag() const {
  // @@protoc_insertion_point(field_list:ConfigSnapSeven.PLCConfig.memoryTag)
  return memorytag_;
}

// -------------------------------------------------------------------

// ConfigSnapSeven

// repeated .ConfigSnapSeven.PLCConfig pLCConfig = 1;
inline int ConfigSnapSeven::_internal_plcconfig_size() const {
  return plcconfig_.size();
}
inline int ConfigSnapSeven::plcconfig_size() const {
  return _internal_plcconfig_size();
}
inline void ConfigSnapSeven::clear_plcconfig() {
  plcconfig_.Clear();
}
inline ::ConfigSnapSeven_PLCConfig* ConfigSnapSeven::mutable_plcconfig(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigSnapSeven.pLCConfig)
  return plcconfig_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ConfigSnapSeven_PLCConfig >*
ConfigSnapSeven::mutable_plcconfig() {
  // @@protoc_insertion_point(field_mutable_list:ConfigSnapSeven.pLCConfig)
  return &plcconfig_;
}
inline const ::ConfigSnapSeven_PLCConfig& ConfigSnapSeven::_internal_plcconfig(int index) const {
  return plcconfig_.Get(index);
}
inline const ::ConfigSnapSeven_PLCConfig& ConfigSnapSeven::plcconfig(int index) const {
  // @@protoc_insertion_point(field_get:ConfigSnapSeven.pLCConfig)
  return _internal_plcconfig(index);
}
inline ::ConfigSnapSeven_PLCConfig* ConfigSnapSeven::_internal_add_plcconfig() {
  return plcconfig_.Add();
}
inline ::ConfigSnapSeven_PLCConfig* ConfigSnapSeven::add_plcconfig() {
  // @@protoc_insertion_point(field_add:ConfigSnapSeven.pLCConfig)
  return _internal_add_plcconfig();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ConfigSnapSeven_PLCConfig >&
ConfigSnapSeven::plcconfig() const {
  // @@protoc_insertion_point(field_list:ConfigSnapSeven.pLCConfig)
  return plcconfig_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::ParameterDataType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ParameterDataType>() {
  return ::ParameterDataType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_s7_2eproto
